# PyLapi API generated by pylapi_gen.py
#
# API Class: aSDK
# 32 Resource Classes (number of methods):
#      AttachmentResource (4)
#      BatchResource (1)
#      CustomFieldResource (6)
#      EnumOptionResource (1)
#      EventResource (1)
#      GoalRelationshipResource (3)
#      GoalResource (12)
#      JobResource (1)
#      MembershipResource (3)
#      OrganizationExportResource (2)
#      PortfolioMembershipResource (2)
#      PortfolioResource (14)
#      ProjectBriefResource (3)
#      ProjectMembershipResource (1)
#      ProjectResource (23)
#      ProjectStatuseResource (2)
#      ProjectTemplateResource (4)
#      RuleTriggerResource (1)
#      SectionResource (5)
#      StatusUpdateResource (4)
#      StoryResource (3)
#      TagResource (6)
#      TaskResource (27)
#      TeamMembershipResource (2)
#      TeamResource (10)
#      TimePeriodResource (2)
#      TimeTrackingEntryResource (3)
#      UserResource (7)
#      UserTaskListResource (2)
#      WebhookResource (5)
#      WorkspaceMembershipResource (1)
#      WorkspaceResource (16)
# Total: 177 methods

from pylapi import PyLapi, PyLapiError

class aSDK(PyLapi):
    def __init__(self, *args, **kwargs) -> None:
        super().__init__(*args, **kwargs)
        self.api_url = "https://app.asana.com/api/1.0"
        self.api_auth_type = "Bearer"

        # Custom __init__ statements

        self._resource_ids.update({"gid": "$.gid"})


    # Custom aSDK methods

    @PyLapi.resource_method(give="$.data")
    def _list(self): pass

    @PyLapi.resource_method("{gid}", give="$.data", load="$.data")
    def _load(self): pass

    @PyLapi.resource_method(http_method="POST", give="$.data", load="$.data", send={"data": "$"})
    def _create(self): pass

    @PyLapi.resource_method("{gid}", http_method="PUT", give="$.data", load="$.data", send={"data": "$"})
    def _update(self): pass

    @PyLapi.resource_method("{gid}", http_method="DELETE", give=None)
    def _delete(self): pass



@aSDK.resource_class("attachment", "attachments")
class AttachmentResource(aSDK):
# To instantiate: aSDK.resource("attachment")
# Number of methods: 4
#     createAttachmentForObject
#     deleteAttachment
#     getAttachment
#     getAttachmentsForObject

    @aSDK.resource_method("", http_method="POST", send={'data': '$'}, give="$.data")
    def createAttachmentForObject(self): pass
    # To call: aSDK.resource("attachment").createAttachmentForObject(...)
    # POST https://app.asana.com/api/1.0/attachments
    # Summary: Upload an attachment
    # Description:
    #   Upload an attachment.
    #
    #   This method uploads an attachment on an object and returns the compact
    #   record for the created attachment object. This is possible by either:
    #
    #   - Providing the URL of the external resource being attached, or
    #   - Downloading the file content first and then uploading it as any other attachment. Note that it is not possible to attach
    #   files from third party services such as Dropbox, Box, Vimeo & Google Drive via the API
    #
    #   The 100MB size limit on attachments in Asana is enforced on this endpoint.
    #
    #   This endpoint expects a multipart/form-data encoded request containing the full contents of the file to be uploaded.
    #
    #   Requests made should follow the HTTP/1.1 specification that line
    #   terminators are of the form `CRLF` or `\r\n` outlined
    #   [here](http://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-01#Basic-Rules) in order for the server to reliably and properly handle the request.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The file you want to upload.
    #
    #     *Note when using curl:*
    #
    #     Be sure to add an `‘@’` before the file path, and use the `--form`
    #     option instead of the `-d` option.
    #
    #     When uploading PDFs with curl, force the content-type to be pdf by
    #     appending the content type to the file path: `--form
    #     "file=@file.pdf;type=application/pdf"`.
    #   content:
    #     multipart/form-data:
    #       schema:
    #         $ref: '#/components/schemas/AttachmentRequest'


    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteAttachment(self): pass
    # To call: aSDK.resource("attachment").deleteAttachment(...)
    # DELETE https://app.asana.com/api/1.0/attachments/{gid}
    # Summary: Delete an attachment
    # Description:
    #   Deletes a specific, existing attachment.
    #
    #   Returns an empty data record.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getAttachment(self): pass
    # To call: aSDK.resource("attachment").getAttachment(...)
    # GET https://app.asana.com/api/1.0/attachments/{gid}
    # Summary: Get an attachment
    # Description:
    #   Get the full record for a single attachment.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getAttachmentsForObject(self): pass
    # To call: aSDK.resource("attachment").getAttachmentsForObject(...)
    # GET https://app.asana.com/api/1.0/attachments
    # Summary: Get attachments from an object
    # Description:
    #   Returns the compact records for all attachments on the object.
    #
    #   There are three possible `parent` values for this request: `project`, `project_brief`, and `task`. For a project, an attachment refers to a file uploaded to the "Key resources" section in the project Overview. For a project brief, an attachment refers to inline files in the project brief itself. For a task, an attachment refers to a file directly associated to that task.
    #
    #   Note that within the Asana app, inline images in the task description do not appear in the index of image thumbnails nor as stories in the task. However, requests made to `GET /attachments` for a task will return all of the images in the task, including inline images.
    #
    # Parameters:
    #   parent:
    #     required: true
    #     in: query
    #     description: Globally unique identifier for object to fetch statuses from. Must
    #       be a GID for a `project`, `project_brief`, or `task`.
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("batch", "batch")
class BatchResource(aSDK):
# To instantiate: aSDK.resource("batch")
# Number of methods: 1
#     createBatchRequest

    @aSDK.resource_method("", http_method="POST", send={'data': '$'}, give="$.data")
    def createBatchRequest(self): pass
    # To call: aSDK.resource("batch").createBatchRequest(...)
    # POST https://app.asana.com/api/1.0/batch
    # Summary: Submit parallel requests
    # Description:
    #   Make multiple requests in parallel to Asana's API.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The requests to batch together via the Batch API.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/BatchRequest'


@aSDK.resource_class("custom_field", "custom_fields")
class CustomFieldResource(aSDK):
# To instantiate: aSDK.resource("custom_field")
# Number of methods: 6
#     createCustomField
#     createEnumOptionForCustomField
#     deleteCustomField
#     getCustomField
#     insertEnumOptionForCustomField
#     updateCustomField

    @aSDK.resource_method("", http_method="POST", send={'data': '$'}, give="$.data")
    def createCustomField(self): pass
    # To call: aSDK.resource("custom_field").createCustomField(...)
    # POST https://app.asana.com/api/1.0/custom_fields
    # Summary: Create a custom field
    # Description:
    #   Creates a new custom field in a workspace. Every custom field is required
    #   to be created in a specific workspace, and this workspace cannot be
    #   changed once set.
    #
    #   A custom field’s name must be unique within a workspace and not conflict
    #   with names of existing task properties such as `Due Date` or `Assignee`.
    #   A custom field’s type must be one of `text`, `enum`, `multi_enum`, `number`,
    #   `date`, or `people`.
    #
    #   Returns the full record of the newly created custom field.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The custom field object to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/CustomFieldRequest'


    @aSDK.resource_method("{gid}/enum_options", http_method="POST", send={'data': '$'}, give="$.data")
    def createEnumOptionForCustomField(self): pass
    # To call: aSDK.resource("custom_field").createEnumOptionForCustomField(...)
    # POST https://app.asana.com/api/1.0/custom_fields/{gid}/enum_options
    # Summary: Create an enum option
    # Description:
    #   Creates an enum option and adds it to this custom field’s list of enum options. A custom field can have at most 500 enum options (including disabled options). By default new enum options are inserted at the end of a custom field’s list.
    #   Locked custom fields can only have enum options added by the user who locked the field.
    #   Returns the full record of the newly created enum option.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The enum option object to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/EnumOptionRequest'


    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteCustomField(self): pass
    # To call: aSDK.resource("custom_field").deleteCustomField(...)
    # DELETE https://app.asana.com/api/1.0/custom_fields/{gid}
    # Summary: Delete a custom field
    # Description:
    #   A specific, existing custom field can be deleted by making a DELETE request on the URL for that custom field.
    #   Locked custom fields can only be deleted by the user who locked the field.
    #   Returns an empty data record.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getCustomField(self): pass
    # To call: aSDK.resource("custom_field").getCustomField(...)
    # GET https://app.asana.com/api/1.0/custom_fields/{gid}
    # Summary: Get a custom field
    # Description:
    #   Get the complete definition of a custom field’s metadata.
    #
    #   Since custom fields can be defined for one of a number of types, and
    #   these types have different data and behaviors, there are fields that are
    #   relevant to a particular type. For instance, as noted above, enum_options
    #   is only relevant for the enum type and defines the set of choices that
    #   the enum could represent. The examples below show some of these
    #   type-specific custom field definitions.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/enum_options/insert", http_method="POST", send={'data': '$'}, give="$.data")
    def insertEnumOptionForCustomField(self): pass
    # To call: aSDK.resource("custom_field").insertEnumOptionForCustomField(...)
    # POST https://app.asana.com/api/1.0/custom_fields/{gid}/enum_options/insert
    # Summary: Reorder a custom field's enum
    # Description:
    #   Moves a particular enum option to be either before or after another specified enum option in the custom field.
    #   Locked custom fields can only be reordered by the user who locked the field.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The enum option object to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/EnumOptionInsertRequest'


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateCustomField(self): pass
    # To call: aSDK.resource("custom_field").updateCustomField(...)
    # PUT https://app.asana.com/api/1.0/custom_fields/{gid}
    # Summary: Update a custom field
    # Description:
    #   A specific, existing custom field can be updated by making a PUT request on the URL for that custom field. Only the fields provided in the `data` block will be updated; any unspecified fields will remain unchanged
    #   When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the custom field.
    #   A custom field’s `type` cannot be updated.
    #   An enum custom field’s `enum_options` cannot be updated with this endpoint. Instead see “Work With Enum Options” for information on how to update `enum_options`.
    #   Locked custom fields can only be updated by the user who locked the field.
    #   Returns the complete updated custom field record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The custom field object with all updated properties.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/CustomFieldRequest'


@aSDK.resource_class("enum_option", "enum_options")
class EnumOptionResource(aSDK):
# To instantiate: aSDK.resource("enum_option")
# Number of methods: 1
#     updateEnumOption

    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateEnumOption(self): pass
    # To call: aSDK.resource("enum_option").updateEnumOption(...)
    # PUT https://app.asana.com/api/1.0/enum_options/{gid}
    # Summary: Update an enum option
    # Description:
    #   Updates an existing enum option. Enum custom fields require at least one enabled enum option.
    #   Locked custom fields can only be updated by the user who locked the field.
    #   Returns the full record of the updated enum option.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The enum option object to update
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/EnumOptionBase'


@aSDK.resource_class("event", "events")
class EventResource(aSDK):
# To instantiate: aSDK.resource("event")
# Number of methods: 1
#     getEvents

    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getEvents(self): pass
    # To call: aSDK.resource("event").getEvents(...)
    # GET https://app.asana.com/api/1.0/events
    # Summary: Get events on a resource
    # Description:
    #   Returns the full record for all events that have occurred since the sync
    #   token was created.
    #
    #   A `GET` request to the endpoint `/[path_to_resource]/events` can be made in
    #   lieu of including the resource ID in the data for the request.
    #
    #   Asana limits a single sync token to 100 events. If more than 100 events exist
    #   for a given resource, `has_more: true` will be returned in the response, indicating
    #   that there are more events to pull.
    #
    #   *Note: The resource returned will be the resource that triggered the
    #   event. This may be different from the one that the events were requested
    #   for. For example, a subscription to a project will contain events for
    #   tasks contained within the project.*
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("goal_relationship", "goal_relationships")
class GoalRelationshipResource(aSDK):
# To instantiate: aSDK.resource("goal_relationship")
# Number of methods: 3
#     getGoalRelationship
#     getGoalRelationships
#     updateGoalRelationship

    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getGoalRelationship(self): pass
    # To call: aSDK.resource("goal_relationship").getGoalRelationship(...)
    # GET https://app.asana.com/api/1.0/goal_relationships/{gid}
    # Summary: Get a goal relationship
    # Description:
    #   Returns the complete updated goal relationship record for a single goal relationship.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getGoalRelationships(self): pass
    # To call: aSDK.resource("goal_relationship").getGoalRelationships(...)
    # GET https://app.asana.com/api/1.0/goal_relationships
    # Summary: Get goal relationships
    # Description:
    #   Returns compact goal relationship records.
    #
    # Parameters:
    #   supported_goal:
    #     required: true
    #     in: query
    #     description: Globally unique identifier for the supported goal in the goal relationship.
    #   resource_subtype:
    #     required: false
    #     in: query
    #     description: If provided, filter to goal relationships with a given resource_subtype.
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateGoalRelationship(self): pass
    # To call: aSDK.resource("goal_relationship").updateGoalRelationship(...)
    # PUT https://app.asana.com/api/1.0/goal_relationships/{gid}
    # Summary: Update a goal relationship
    # Description:
    #   An existing goal relationship can be updated by making a PUT request on the URL for
    #   that goal relationship. Only the fields provided in the `data` block will be updated;
    #   any unspecified fields will remain unchanged.
    #
    #   Returns the complete updated goal relationship record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The updated fields for the goal relationship.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/GoalRelationshipRequest'


@aSDK.resource_class("goal", "goals")
class GoalResource(aSDK):
# To instantiate: aSDK.resource("goal")
# Number of methods: 12
#     addFollowers
#     addSupportingRelationship
#     createGoal
#     createGoalMetric
#     deleteGoal
#     getGoal
#     getGoals
#     getParentGoalsForGoal
#     removeFollowers
#     removeSupportingRelationship
#     updateGoal
#     updateGoalMetric

    @aSDK.resource_method("{gid}/addFollowers", http_method="POST", send={'data': '$'}, give="$.data")
    def addFollowers(self): pass
    # To call: aSDK.resource("goal").addFollowers(...)
    # POST https://app.asana.com/api/1.0/goals/{gid}/addFollowers
    # Summary: Add a collaborator to a goal
    # Description:
    #   Adds followers to a goal. Returns the goal the followers were added to.
    #   Each goal can be associated with zero or more followers in the system.
    #   Requests to add/remove followers, if successful, will return the complete updated goal record, described above.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The followers to be added as collaborators
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TaskAddFollowersRequest'


    @aSDK.resource_method("{gid}/addSupportingRelationship", http_method="POST", send={'data': '$'}, give="$.data")
    def addSupportingRelationship(self): pass
    # To call: aSDK.resource("goal").addSupportingRelationship(...)
    # POST https://app.asana.com/api/1.0/goals/{gid}/addSupportingRelationship
    # Summary: Add a supporting goal relationship
    # Description:
    #   Creates a goal relationship by adding a supporting resource to a given goal.
    #
    #   Returns the newly created goal relationship record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The supporting resource to be added to the goal
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/GoalAddSupportingRelationshipRequest'


    @aSDK.resource_method("", http_method="POST", send={'data': '$'}, give="$.data")
    def createGoal(self): pass
    # To call: aSDK.resource("goal").createGoal(...)
    # POST https://app.asana.com/api/1.0/goals
    # Summary: Create a goal
    # Description:
    #   Creates a new goal in a workspace or team.
    #
    #   Returns the full record of the newly created goal.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The goal to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/GoalRequest'


    @aSDK.resource_method("{gid}/setMetric", http_method="POST", send={'data': '$'}, give="$.data")
    def createGoalMetric(self): pass
    # To call: aSDK.resource("goal").createGoalMetric(...)
    # POST https://app.asana.com/api/1.0/goals/{gid}/setMetric
    # Summary: Create a goal metric
    # Description:
    #   Creates and adds a goal metric to a specified goal. Note that this replaces an existing goal metric if one already exists.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The goal metric to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/GoalMetricRequest'


    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteGoal(self): pass
    # To call: aSDK.resource("goal").deleteGoal(...)
    # DELETE https://app.asana.com/api/1.0/goals/{gid}
    # Summary: Delete a goal
    # Description:
    #   A specific, existing goal can be deleted by making a DELETE request on the URL for that goal.
    #
    #   Returns an empty data record.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getGoal(self): pass
    # To call: aSDK.resource("goal").getGoal(...)
    # GET https://app.asana.com/api/1.0/goals/{gid}
    # Summary: Get a goal
    # Description:
    #   Returns the complete goal record for a single goal.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getGoals(self): pass
    # To call: aSDK.resource("goal").getGoals(...)
    # GET https://app.asana.com/api/1.0/goals
    # Summary: Get goals
    # Description:
    #   Returns compact goal records.
    #
    # Parameters:
    #   portfolio:
    #     required: false
    #     in: query
    #     description: Globally unique identifier for supporting portfolio.
    #   project:
    #     required: false
    #     in: query
    #     description: Globally unique identifier for supporting project.
    #   is_workspace_level:
    #     required: false
    #     in: query
    #     description: Filter to goals with is_workspace_level set to query value. Must
    #       be used with the workspace parameter.
    #   team:
    #     required: false
    #     in: query
    #     description: Globally unique identifier for the team.
    #   workspace:
    #     required: false
    #     in: query
    #     description: Globally unique identifier for the workspace.
    #   time_periods:
    #     required: false
    #     in: query
    #     description: Globally unique identifiers for the time periods.
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/parentGoals", http_method="GET", send={'data': '$'}, give="$.data")
    def getParentGoalsForGoal(self): pass
    # To call: aSDK.resource("goal").getParentGoalsForGoal(...)
    # GET https://app.asana.com/api/1.0/goals/{gid}/parentGoals
    # Summary: Get parent goals from a goal
    # Description:
    #   Returns a compact representation of all of the parent goals of a goal.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/removeFollowers", http_method="POST", send={'data': '$'}, give="$.data")
    def removeFollowers(self): pass
    # To call: aSDK.resource("goal").removeFollowers(...)
    # POST https://app.asana.com/api/1.0/goals/{gid}/removeFollowers
    # Summary: Remove a collaborator from a goal
    # Description:
    #   Removes followers from a goal. Returns the goal the followers were removed from.
    #   Each goal can be associated with zero or more followers in the system.
    #   Requests to add/remove followers, if successful, will return the complete updated goal record, described above.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The followers to be removed as collaborators
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TaskAddFollowersRequest'


    @aSDK.resource_method("{gid}/removeSupportingRelationship", http_method="POST", send={'data': '$'}, give="$.data")
    def removeSupportingRelationship(self): pass
    # To call: aSDK.resource("goal").removeSupportingRelationship(...)
    # POST https://app.asana.com/api/1.0/goals/{gid}/removeSupportingRelationship
    # Summary: Removes a supporting goal relationship
    # Description:
    #   Removes a goal relationship for a given parent goal.
    #
    # Request Body:
    #   description: The supporting resource to be removed from the goal
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/GoalRemoveSupportingRelationshipRequest'


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateGoal(self): pass
    # To call: aSDK.resource("goal").updateGoal(...)
    # PUT https://app.asana.com/api/1.0/goals/{gid}
    # Summary: Update a goal
    # Description:
    #   An existing goal can be updated by making a PUT request on the URL for
    #   that goal. Only the fields provided in the `data` block will be updated;
    #   any unspecified fields will remain unchanged.
    #
    #   Returns the complete updated goal record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The updated fields for the goal.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/GoalUpdateRequest'


    @aSDK.resource_method("{gid}/setMetricCurrentValue", http_method="POST", send={'data': '$'}, give="$.data")
    def updateGoalMetric(self): pass
    # To call: aSDK.resource("goal").updateGoalMetric(...)
    # POST https://app.asana.com/api/1.0/goals/{gid}/setMetricCurrentValue
    # Summary: Update a goal metric
    # Description:
    #   Updates a goal's existing metric's `current_number_value` if one exists,
    #   otherwise responds with a 400 status code.
    #
    #   Returns the complete updated goal metric record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The updated fields for the goal metric.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/GoalMetricCurrentValueRequest'


@aSDK.resource_class("job", "jobs")
class JobResource(aSDK):
# To instantiate: aSDK.resource("job")
# Number of methods: 1
#     getJob

    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getJob(self): pass
    # To call: aSDK.resource("job").getJob(...)
    # GET https://app.asana.com/api/1.0/jobs/{gid}
    # Summary: Get a job by id
    # Description:
    #   Returns the full record for a job.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("membership", "memberships")
class MembershipResource(aSDK):
# To instantiate: aSDK.resource("membership")
# Number of methods: 3
#     createMembership
#     deleteMembership
#     getMemberships

    @aSDK.resource_method("", http_method="POST", send={'data': '$'}, give="$.data")
    def createMembership(self): pass
    # To call: aSDK.resource("membership").createMembership(...)
    # POST https://app.asana.com/api/1.0/memberships
    # Summary: Create a membership
    # Description:
    #   Creates a new membership in a `goal`. `Teams` or `users` can be a member
    #   of `goals`.
    #
    #   Returns the full record of the newly created membership.
    #
    # Request Body:
    #   description: The updated fields for the membership.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/CreateMembershipRequest'


    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteMembership(self): pass
    # To call: aSDK.resource("membership").deleteMembership(...)
    # DELETE https://app.asana.com/api/1.0/memberships/{gid}
    # Summary: Delete a membership
    # Description:
    #   A specific, existing membership can be deleted by making a `DELETE` request
    #   on the URL for that membership.
    #
    #   Returns an empty data record.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getMemberships(self): pass
    # To call: aSDK.resource("membership").getMemberships(...)
    # GET https://app.asana.com/api/1.0/memberships
    # Summary: Get multiple memberships
    # Description:
    #   Returns compact `goal_membership` records. The possible types for `parent` in this request are `goal`. An additional member (user GID or team GID) can be passed in to filter to a specific membership.
    #
    # Parameters:
    #   parent:
    #     required: false
    #     in: query
    #     description: Globally unique identifier for `goal`.
    #   member:
    #     required: false
    #     in: query
    #     description: Globally unique identifier for `team` or `user`.
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("organization_export", "organization_exports")
class OrganizationExportResource(aSDK):
# To instantiate: aSDK.resource("organization_export")
# Number of methods: 2
#     createOrganizationExport
#     getOrganizationExport

    @aSDK.resource_method("", http_method="POST", send={'data': '$'}, give="$.data")
    def createOrganizationExport(self): pass
    # To call: aSDK.resource("organization_export").createOrganizationExport(...)
    # POST https://app.asana.com/api/1.0/organization_exports
    # Summary: Create an organization export request
    # Description:
    #   This method creates a request to export an Organization. Asana will complete the export at some point after you create the request.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The organization to export.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/OrganizationExportRequest'


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getOrganizationExport(self): pass
    # To call: aSDK.resource("organization_export").getOrganizationExport(...)
    # GET https://app.asana.com/api/1.0/organization_exports/{gid}
    # Summary: Get details on an org export request
    # Description:
    #   Returns details of a previously-requested Organization export.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("portfolio_membership", "portfolio_memberships")
class PortfolioMembershipResource(aSDK):
# To instantiate: aSDK.resource("portfolio_membership")
# Number of methods: 2
#     getPortfolioMembership
#     getPortfolioMemberships

    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getPortfolioMembership(self): pass
    # To call: aSDK.resource("portfolio_membership").getPortfolioMembership(...)
    # GET https://app.asana.com/api/1.0/portfolio_memberships/{gid}
    # Summary: Get a portfolio membership
    # Description:
    #   Returns the complete portfolio record for a single portfolio membership.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getPortfolioMemberships(self): pass
    # To call: aSDK.resource("portfolio_membership").getPortfolioMemberships(...)
    # GET https://app.asana.com/api/1.0/portfolio_memberships
    # Summary: Get multiple portfolio memberships
    # Description:
    #   Returns a list of portfolio memberships in compact representation. You must specify `portfolio`, `portfolio` and `user`, or `workspace` and `user`.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("portfolio", "portfolios")
class PortfolioResource(aSDK):
# To instantiate: aSDK.resource("portfolio")
# Number of methods: 14
#     addCustomFieldSettingForPortfolio
#     addItemForPortfolio
#     addMembersForPortfolio
#     createPortfolio
#     deletePortfolio
#     getCustomFieldSettingsForPortfolio
#     getItemsForPortfolio
#     getPortfolio
#     getPortfolioMembershipsForPortfolio
#     getPortfolios
#     removeCustomFieldSettingForPortfolio
#     removeItemForPortfolio
#     removeMembersForPortfolio
#     updatePortfolio

    @aSDK.resource_method("{gid}/addCustomFieldSetting", http_method="POST", send={'data': '$'}, give="$.data")
    def addCustomFieldSettingForPortfolio(self): pass
    # To call: aSDK.resource("portfolio").addCustomFieldSettingForPortfolio(...)
    # POST https://app.asana.com/api/1.0/portfolios/{gid}/addCustomFieldSetting
    # Summary: Add a custom field to a portfolio
    # Description:
    #   Custom fields are associated with portfolios by way of custom field settings.  This method creates a setting for the portfolio.
    #
    # Request Body:
    #   description: Information about the custom field setting.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/AddCustomFieldSettingRequest'


    @aSDK.resource_method("{gid}/addItem", http_method="POST", send={'data': '$'}, give="$.data")
    def addItemForPortfolio(self): pass
    # To call: aSDK.resource("portfolio").addItemForPortfolio(...)
    # POST https://app.asana.com/api/1.0/portfolios/{gid}/addItem
    # Summary: Add a portfolio item
    # Description:
    #   Add an item to a portfolio.
    #   Returns an empty data block.
    #
    # Request Body:
    #   description: Information about the item being inserted.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/PortfolioAddItemRequest'


    @aSDK.resource_method("{gid}/addMembers", http_method="POST", send={'data': '$'}, give="$.data")
    def addMembersForPortfolio(self): pass
    # To call: aSDK.resource("portfolio").addMembersForPortfolio(...)
    # POST https://app.asana.com/api/1.0/portfolios/{gid}/addMembers
    # Summary: Add users to a portfolio
    # Description:
    #   Adds the specified list of users as members of the portfolio.
    #   Returns the updated portfolio record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: Information about the members being added.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/AddMembersRequest'


    @aSDK.resource_method("", http_method="POST", send={'data': '$'}, give="$.data")
    def createPortfolio(self): pass
    # To call: aSDK.resource("portfolio").createPortfolio(...)
    # POST https://app.asana.com/api/1.0/portfolios
    # Summary: Create a portfolio
    # Description:
    #   Creates a new portfolio in the given workspace with the supplied name.
    #
    #   Note that portfolios created in the Asana UI may have some state
    #   (like the “Priority” custom field) which is automatically added
    #   to the portfolio when it is created. Portfolios created via our
    #   API will *not* be created with the same initial state to allow
    #   integrations to create their own starting state on a portfolio.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The portfolio to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/PortfolioRequest'


    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deletePortfolio(self): pass
    # To call: aSDK.resource("portfolio").deletePortfolio(...)
    # DELETE https://app.asana.com/api/1.0/portfolios/{gid}
    # Summary: Delete a portfolio
    # Description:
    #   An existing portfolio can be deleted by making a DELETE request on
    #   the URL for that portfolio.
    #
    #   Returns an empty data record.


    @aSDK.resource_method("{gid}/custom_field_settings", http_method="GET", send={'data': '$'}, give="$.data")
    def getCustomFieldSettingsForPortfolio(self): pass
    # To call: aSDK.resource("portfolio").getCustomFieldSettingsForPortfolio(...)
    # GET https://app.asana.com/api/1.0/portfolios/{gid}/custom_field_settings
    # Summary: Get a portfolio's custom fields
    # Description:
    #   Returns a list of all of the custom fields settings on a portfolio, in compact form.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/items", http_method="GET", send={'data': '$'}, give="$.data")
    def getItemsForPortfolio(self): pass
    # To call: aSDK.resource("portfolio").getItemsForPortfolio(...)
    # GET https://app.asana.com/api/1.0/portfolios/{gid}/items
    # Summary: Get portfolio items
    # Description:
    #   Get a list of the items in compact form in a portfolio.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getPortfolio(self): pass
    # To call: aSDK.resource("portfolio").getPortfolio(...)
    # GET https://app.asana.com/api/1.0/portfolios/{gid}
    # Summary: Get a portfolio
    # Description:
    #   Returns the complete portfolio record for a single portfolio.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/portfolio_memberships", http_method="GET", send={'data': '$'}, give="$.data")
    def getPortfolioMembershipsForPortfolio(self): pass
    # To call: aSDK.resource("portfolio").getPortfolioMembershipsForPortfolio(...)
    # GET https://app.asana.com/api/1.0/portfolios/{gid}/portfolio_memberships
    # Summary: Get memberships from a portfolio
    # Description:
    #   Returns the compact portfolio membership records for the portfolio.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getPortfolios(self): pass
    # To call: aSDK.resource("portfolio").getPortfolios(...)
    # GET https://app.asana.com/api/1.0/portfolios
    # Summary: Get multiple portfolios
    # Description:
    #   Returns a list of the portfolios in compact representation that are owned by the current API user.
    #
    # Parameters:
    #   workspace:
    #     required: true
    #     in: query
    #     description: The workspace or organization to filter portfolios on.
    #   owner:
    #     required: false
    #     in: query
    #     description: The user who owns the portfolio. Currently, API users can only get
    #       a list of portfolios that they themselves own, unless the request is made from
    #       a Service Account. In the case of a Service Account, if this parameter is specified,
    #       then all portfolios owned by this parameter are returned. Otherwise, all portfolios
    #       across the workspace are returned.
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/removeCustomFieldSetting", http_method="POST", send={'data': '$'}, give="$.data")
    def removeCustomFieldSettingForPortfolio(self): pass
    # To call: aSDK.resource("portfolio").removeCustomFieldSettingForPortfolio(...)
    # POST https://app.asana.com/api/1.0/portfolios/{gid}/removeCustomFieldSetting
    # Summary: Remove a custom field from a portfolio
    # Description:
    #   Removes a custom field setting from a portfolio.
    #
    # Request Body:
    #   description: Information about the custom field setting being removed.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/RemoveCustomFieldSettingRequest'


    @aSDK.resource_method("{gid}/removeItem", http_method="POST", send={'data': '$'}, give="$.data")
    def removeItemForPortfolio(self): pass
    # To call: aSDK.resource("portfolio").removeItemForPortfolio(...)
    # POST https://app.asana.com/api/1.0/portfolios/{gid}/removeItem
    # Summary: Remove a portfolio item
    # Description:
    #   Remove an item from a portfolio.
    #   Returns an empty data block.
    #
    # Request Body:
    #   description: Information about the item being removed.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/PortfolioRemoveItemRequest'


    @aSDK.resource_method("{gid}/removeMembers", http_method="POST", send={'data': '$'}, give="$.data")
    def removeMembersForPortfolio(self): pass
    # To call: aSDK.resource("portfolio").removeMembersForPortfolio(...)
    # POST https://app.asana.com/api/1.0/portfolios/{gid}/removeMembers
    # Summary: Remove users from a portfolio
    # Description:
    #   Removes the specified list of users from members of the portfolio.
    #   Returns the updated portfolio record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: Information about the members being removed.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/RemoveMembersRequest'


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updatePortfolio(self): pass
    # To call: aSDK.resource("portfolio").updatePortfolio(...)
    # PUT https://app.asana.com/api/1.0/portfolios/{gid}
    # Summary: Update a portfolio
    # Description:
    #   An existing portfolio can be updated by making a PUT request on the URL for
    #   that portfolio. Only the fields provided in the `data` block will be updated;
    #   any unspecified fields will remain unchanged.
    #
    #   Returns the complete updated portfolio record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The updated fields for the portfolio.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/PortfolioRequest'


@aSDK.resource_class("project_brief", "project_briefs")
class ProjectBriefResource(aSDK):
# To instantiate: aSDK.resource("project_brief")
# Number of methods: 3
#     deleteProjectBrief
#     getProjectBrief
#     updateProjectBrief

    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteProjectBrief(self): pass
    # To call: aSDK.resource("project_brief").deleteProjectBrief(...)
    # DELETE https://app.asana.com/api/1.0/project_briefs/{gid}
    # Summary: Delete a project brief
    # Description:
    #   Deletes a specific, existing project brief.
    #
    #   Returns an empty data record.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getProjectBrief(self): pass
    # To call: aSDK.resource("project_brief").getProjectBrief(...)
    # GET https://app.asana.com/api/1.0/project_briefs/{gid}
    # Summary: Get a project brief
    # Description:
    #   Get the full record for a project brief.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateProjectBrief(self): pass
    # To call: aSDK.resource("project_brief").updateProjectBrief(...)
    # PUT https://app.asana.com/api/1.0/project_briefs/{gid}
    # Summary: Update a project brief
    # Description:
    #   An existing project brief can be updated by making a PUT request on the URL for
    #   that project brief. Only the fields provided in the `data` block will be updated;
    #   any unspecified fields will remain unchanged.
    #
    #   Returns the complete updated project brief record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The updated fields for the project brief.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ProjectBriefRequest'


@aSDK.resource_class("project_membership", "project_memberships")
class ProjectMembershipResource(aSDK):
# To instantiate: aSDK.resource("project_membership")
# Number of methods: 1
#     getProjectMembership

    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getProjectMembership(self): pass
    # To call: aSDK.resource("project_membership").getProjectMembership(...)
    # GET https://app.asana.com/api/1.0/project_memberships/{gid}
    # Summary: Get a project membership
    # Description:
    #   Returns the complete project record for a single project membership.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("project", "projects")
class ProjectResource(aSDK):
# To instantiate: aSDK.resource("project")
# Number of methods: 23
#     addCustomFieldSettingForProject
#     addFollowersForProject
#     addMembersForProject
#     createProject
#     createProjectBrief
#     createProjectStatusForProject
#     createSectionForProject
#     deleteProject
#     duplicateProject
#     getCustomFieldSettingsForProject
#     getProject
#     getProjectMembershipsForProject
#     getProjectStatusesForProject
#     getProjects
#     getSectionsForProject
#     getTaskCountsForProject
#     getTasksForProject
#     insertSectionForProject
#     projectSaveAsTemplate
#     removeCustomFieldSettingForProject
#     removeFollowersForProject
#     removeMembersForProject
#     updateProject

    @aSDK.resource_method("{gid}/addCustomFieldSetting", http_method="POST", send={'data': '$'}, give="$.data")
    def addCustomFieldSettingForProject(self): pass
    # To call: aSDK.resource("project").addCustomFieldSettingForProject(...)
    # POST https://app.asana.com/api/1.0/projects/{gid}/addCustomFieldSetting
    # Summary: Add a custom field to a project
    # Description:
    #   Custom fields are associated with projects by way of custom field settings.  This method creates a setting for the project.
    #
    # Request Body:
    #   description: Information about the custom field setting.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/AddCustomFieldSettingRequest'


    @aSDK.resource_method("{gid}/addFollowers", http_method="POST", send={'data': '$'}, give="$.data")
    def addFollowersForProject(self): pass
    # To call: aSDK.resource("project").addFollowersForProject(...)
    # POST https://app.asana.com/api/1.0/projects/{gid}/addFollowers
    # Summary: Add followers to a project
    # Description:
    #   Adds the specified list of users as followers to the project. Followers are a subset of members who have opted in to receive "tasks added" notifications for a project. Therefore, if the users are not already members of the project, they will also become members as a result of this operation.
    #   Returns the updated project record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: Information about the followers being added.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/AddFollowersRequest'


    @aSDK.resource_method("{gid}/addMembers", http_method="POST", send={'data': '$'}, give="$.data")
    def addMembersForProject(self): pass
    # To call: aSDK.resource("project").addMembersForProject(...)
    # POST https://app.asana.com/api/1.0/projects/{gid}/addMembers
    # Summary: Add users to a project
    # Description:
    #   Adds the specified list of users as members of the project. Note that a user being added as a member may also be added as a *follower* as a result of this operation. This is because the user's default notification settings (i.e., in the "Notifcations" tab of "My Profile Settings") will override this endpoint's default behavior of setting "Tasks added" notifications to `false`.
    #   Returns the updated project record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: Information about the members being added.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/AddMembersRequest'


    @aSDK.resource_method("", http_method="POST", send={'data': '$'}, give="$.data")
    def createProject(self): pass
    # To call: aSDK.resource("project").createProject(...)
    # POST https://app.asana.com/api/1.0/projects
    # Summary: Create a project
    # Description:
    #   Create a new project in a workspace or team.
    #
    #   Every project is required to be created in a specific workspace or
    #   organization, and this cannot be changed once set. Note that you can use
    #   the `workspace` parameter regardless of whether or not it is an
    #   organization.
    #
    #   If the workspace for your project is an organization, you must also
    #   supply a `team` to share the project with.
    #
    #   Returns the full record of the newly created project.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The project to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ProjectRequest'


    @aSDK.resource_method("{gid}/project_briefs", http_method="POST", send={'data': '$'}, give="$.data")
    def createProjectBrief(self): pass
    # To call: aSDK.resource("project").createProjectBrief(...)
    # POST https://app.asana.com/api/1.0/projects/{gid}/project_briefs
    # Summary: Create a project brief
    # Description:
    #   Creates a new project brief.
    #
    #   Returns the full record of the newly created project brief.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The project brief to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ProjectBriefRequest'


    @aSDK.resource_method("{gid}/project_statuses", http_method="POST", send={'data': '$'}, give="$.data")
    def createProjectStatusForProject(self): pass
    # To call: aSDK.resource("project").createProjectStatusForProject(...)
    # POST https://app.asana.com/api/1.0/projects/{gid}/project_statuses
    # Summary: Create a project status
    # Description:
    #   *Deprecated: new integrations should prefer the `/status_updates` route.*
    #
    #   Creates a new status update on the project.
    #
    #   Returns the full record of the newly created project status update.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The project status to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ProjectStatusRequest'


    @aSDK.resource_method("{gid}/sections", http_method="POST", send={'data': '$'}, give="$.data")
    def createSectionForProject(self): pass
    # To call: aSDK.resource("project").createSectionForProject(...)
    # POST https://app.asana.com/api/1.0/projects/{gid}/sections
    # Summary: Create a section in a project
    # Description:
    #   Creates a new section in a project.
    #   Returns the full record of the newly created section.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The section to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/SectionRequest'


    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteProject(self): pass
    # To call: aSDK.resource("project").deleteProject(...)
    # DELETE https://app.asana.com/api/1.0/projects/{gid}
    # Summary: Delete a project
    # Description:
    #   A specific, existing project can be deleted by making a DELETE request on
    #   the URL for that project.
    #
    #   Returns an empty data record.


    @aSDK.resource_method("{gid}/duplicate", http_method="POST", send={'data': '$'}, give="$.data")
    def duplicateProject(self): pass
    # To call: aSDK.resource("project").duplicateProject(...)
    # POST https://app.asana.com/api/1.0/projects/{gid}/duplicate
    # Summary: Duplicate a project
    # Description:
    #   Creates and returns a job that will asynchronously handle the duplication.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: Describes the duplicate's name and the elements that will be duplicated.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ProjectDuplicateRequest'


    @aSDK.resource_method("{gid}/custom_field_settings", http_method="GET", send={'data': '$'}, give="$.data")
    def getCustomFieldSettingsForProject(self): pass
    # To call: aSDK.resource("project").getCustomFieldSettingsForProject(...)
    # GET https://app.asana.com/api/1.0/projects/{gid}/custom_field_settings
    # Summary: Get a project's custom fields
    # Description:
    #   Returns a list of all of the custom fields settings on a project, in compact form. Note that, as in all queries to collections which return compact representation, `opt_fields` can be used to include more data than is returned in the compact representation. See the [documentation for input/output options](https://developers.asana.com/docs/inputoutput-options) for more information.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getProject(self): pass
    # To call: aSDK.resource("project").getProject(...)
    # GET https://app.asana.com/api/1.0/projects/{gid}
    # Summary: Get a project
    # Description:
    #   Returns the complete project record for a single project.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/project_memberships", http_method="GET", send={'data': '$'}, give="$.data")
    def getProjectMembershipsForProject(self): pass
    # To call: aSDK.resource("project").getProjectMembershipsForProject(...)
    # GET https://app.asana.com/api/1.0/projects/{gid}/project_memberships
    # Summary: Get memberships from a project
    # Description:
    #   Returns the compact project membership records for the project.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/project_statuses", http_method="GET", send={'data': '$'}, give="$.data")
    def getProjectStatusesForProject(self): pass
    # To call: aSDK.resource("project").getProjectStatusesForProject(...)
    # GET https://app.asana.com/api/1.0/projects/{gid}/project_statuses
    # Summary: Get statuses from a project
    # Description:
    #   *Deprecated: new integrations should prefer the `/status_updates` route.*
    #
    #   Returns the compact project status update records for all updates on the project.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getProjects(self): pass
    # To call: aSDK.resource("project").getProjects(...)
    # GET https://app.asana.com/api/1.0/projects
    # Summary: Get multiple projects
    # Description:
    #   Returns the compact project records for some filtered set of projects. Use one or more of the parameters provided to filter the projects returned.
    #   *Note: This endpoint may timeout for large domains. Try filtering by team!*
    #
    # Parameters:
    #   workspace:
    #     required: false
    #     in: query
    #     description: The workspace or organization to filter projects on.
    #   team:
    #     required: false
    #     in: query
    #     description: The team to filter projects on.
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/sections", http_method="GET", send={'data': '$'}, give="$.data")
    def getSectionsForProject(self): pass
    # To call: aSDK.resource("project").getSectionsForProject(...)
    # GET https://app.asana.com/api/1.0/projects/{gid}/sections
    # Summary: Get sections in a project
    # Description:
    #   Returns the compact records for all sections in the specified project.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/task_counts", http_method="GET", send={'data': '$'}, give="$.data")
    def getTaskCountsForProject(self): pass
    # To call: aSDK.resource("project").getTaskCountsForProject(...)
    # GET https://app.asana.com/api/1.0/projects/{gid}/task_counts
    # Summary: Get task count of a project
    # Description:
    #   Get an object that holds task count fields. **All fields are excluded by default**. You must [opt in](/docs/inputoutput-options) using `opt_fields` to get any information from this endpoint.
    #
    #   This endpoint has an additional [rate limit](/docs/rate-limits) and each field counts especially high against our [cost limits](/docs/rate-limits#cost-limits).
    #
    #   Milestones are just tasks, so they are included in the `num_tasks`, `num_incomplete_tasks`, and `num_completed_tasks` counts.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/tasks", http_method="GET", send={'data': '$'}, give="$.data")
    def getTasksForProject(self): pass
    # To call: aSDK.resource("project").getTasksForProject(...)
    # GET https://app.asana.com/api/1.0/projects/{gid}/tasks
    # Summary: Get tasks from a project
    # Description:
    #   Returns the compact task records for all tasks within the given project, ordered by their priority within the project. Tasks can exist in more than one project at a time.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/sections/insert", http_method="POST", send={'data': '$'}, give="$.data")
    def insertSectionForProject(self): pass
    # To call: aSDK.resource("project").insertSectionForProject(...)
    # POST https://app.asana.com/api/1.0/projects/{gid}/sections/insert
    # Summary: Move or Insert sections
    # Description:
    #   Move sections relative to each other. One of
    #   `before_section` or `after_section` is required.
    #
    #   Sections cannot be moved between projects.
    #
    #   Returns an empty data block.
    #
    # Request Body:
    #   description: The section's move action.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ProjectSectionInsertRequest'


    @aSDK.resource_method("{gid}/saveAsTemplate", http_method="POST", send={'data': '$'}, give="$.data")
    def projectSaveAsTemplate(self): pass
    # To call: aSDK.resource("project").projectSaveAsTemplate(...)
    # POST https://app.asana.com/api/1.0/projects/{gid}/saveAsTemplate
    # Summary: Create a project template from a project
    # Description:
    #   Creates and returns a job that will asynchronously handle the project template creation. Note that
    #   while the resulting project template can be accessed with the API, it won't be visible in the Asana
    #   UI until Project Templates 2.0 is launched in the app. See more in [this forum post](https://forum.asana.com/t/a-new-api-for-project-templates/156432).
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: Describes the inputs used for creating a project template, such as the resulting project template's name, which team it should be created in.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ProjectSaveAsTemplateRequest'


    @aSDK.resource_method("{gid}/removeCustomFieldSetting", http_method="POST", send={'data': '$'}, give="$.data")
    def removeCustomFieldSettingForProject(self): pass
    # To call: aSDK.resource("project").removeCustomFieldSettingForProject(...)
    # POST https://app.asana.com/api/1.0/projects/{gid}/removeCustomFieldSetting
    # Summary: Remove a custom field from a project
    # Description:
    #   Removes a custom field setting from a project.
    #
    # Request Body:
    #   description: Information about the custom field setting being removed.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/RemoveCustomFieldSettingRequest'


    @aSDK.resource_method("{gid}/removeFollowers", http_method="POST", send={'data': '$'}, give="$.data")
    def removeFollowersForProject(self): pass
    # To call: aSDK.resource("project").removeFollowersForProject(...)
    # POST https://app.asana.com/api/1.0/projects/{gid}/removeFollowers
    # Summary: Remove followers from a project
    # Description:
    #   Removes the specified list of users from following the project, this will not affect project membership status.
    #   Returns the updated project record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: Information about the followers being removed.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/RemoveFollowersRequest'


    @aSDK.resource_method("{gid}/removeMembers", http_method="POST", send={'data': '$'}, give="$.data")
    def removeMembersForProject(self): pass
    # To call: aSDK.resource("project").removeMembersForProject(...)
    # POST https://app.asana.com/api/1.0/projects/{gid}/removeMembers
    # Summary: Remove users from a project
    # Description:
    #   Removes the specified list of users from members of the project.
    #   Returns the updated project record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: Information about the members being removed.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/RemoveMembersRequest'


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateProject(self): pass
    # To call: aSDK.resource("project").updateProject(...)
    # PUT https://app.asana.com/api/1.0/projects/{gid}
    # Summary: Update a project
    # Description:
    #   A specific, existing project can be updated by making a PUT request on
    #   the URL for that project. Only the fields provided in the `data` block
    #   will be updated; any unspecified fields will remain unchanged.
    #
    #   When using this method, it is best to specify only those fields you wish
    #   to change, or else you may overwrite changes made by another user since
    #   you last retrieved the task.
    #
    #   Returns the complete updated project record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The updated fields for the project.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ProjectRequest'


@aSDK.resource_class("project_statuse", "project_statuses")
class ProjectStatuseResource(aSDK):
# To instantiate: aSDK.resource("project_statuse")
# Number of methods: 2
#     deleteProjectStatus
#     getProjectStatus

    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteProjectStatus(self): pass
    # To call: aSDK.resource("project_statuse").deleteProjectStatus(...)
    # DELETE https://app.asana.com/api/1.0/project_statuses/{gid}
    # Summary: Delete a project status
    # Description:
    #   *Deprecated: new integrations should prefer the `/status_updates/{status_gid}` route.*
    #
    #   Deletes a specific, existing project status update.
    #
    #   Returns an empty data record.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getProjectStatus(self): pass
    # To call: aSDK.resource("project_statuse").getProjectStatus(...)
    # GET https://app.asana.com/api/1.0/project_statuses/{gid}
    # Summary: Get a project status
    # Description:
    #   *Deprecated: new integrations should prefer the `/status_updates/{status_gid}` route.*
    #
    #   Returns the complete record for a single status update.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("project_template", "project_templates")
class ProjectTemplateResource(aSDK):
# To instantiate: aSDK.resource("project_template")
# Number of methods: 4
#     deleteProjectTemplate
#     getProjectTemplate
#     getProjectTemplates
#     instantiateProject

    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteProjectTemplate(self): pass
    # To call: aSDK.resource("project_template").deleteProjectTemplate(...)
    # DELETE https://app.asana.com/api/1.0/project_templates/{gid}
    # Summary: Delete a project template
    # Description:
    #   A specific, existing project template can be deleted by making a DELETE request on the URL for that project template.
    #
    #   Returns an empty data record.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getProjectTemplate(self): pass
    # To call: aSDK.resource("project_template").getProjectTemplate(...)
    # GET https://app.asana.com/api/1.0/project_templates/{gid}
    # Summary: Get a project template
    # Description:
    #   Returns the complete project template record for a single project template.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getProjectTemplates(self): pass
    # To call: aSDK.resource("project_template").getProjectTemplates(...)
    # GET https://app.asana.com/api/1.0/project_templates
    # Summary: Get multiple project templates
    # Description:
    #   Returns the compact project template records for all project templates in the given team or workspace.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/instantiateProject", http_method="POST", send={'data': '$'}, give="$.data")
    def instantiateProject(self): pass
    # To call: aSDK.resource("project_template").instantiateProject(...)
    # POST https://app.asana.com/api/1.0/project_templates/{gid}/instantiateProject
    # Summary: Instantiate a project from a project template
    # Description:
    #   Creates and returns a job that will asynchronously handle the project instantiation.
    #
    #   To form this request, it is recommended to first make a request to [get a project template](/reference/getprojecttemplate). Then, from the response, copy the `gid` from the object in the `requested_dates` array. This `gid` should be used in `requested_dates` to instantiate a project.
    #
    #   _Note: The body of this request will differ if your workspace is an organization. To determine if your workspace is an organization, use the [is_organization](/reference/workspaces) parameter._
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: Describes the inputs used for instantiating a project, such as the resulting project's name, which team it should be created in, and values for date variables.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ProjectTemplateInstantiateProjectRequest'


@aSDK.resource_class("rule_trigger", "rule_triggers")
class RuleTriggerResource(aSDK):
# To instantiate: aSDK.resource("rule_trigger")
# Number of methods: 1
#     triggerRule

    @aSDK.resource_method("{gid}/run", http_method="POST", send={'data': '$'}, give="$.data")
    def triggerRule(self): pass
    # To call: aSDK.resource("rule_trigger").triggerRule(...)
    # POST https://app.asana.com/api/1.0/rule_triggers/{gid}/run
    # Summary: Trigger a rule
    # Description:
    #   Trigger a rule which uses an ["incoming web request"](/docs/incoming-web-requests) trigger.
    #
    # Request Body:
    #   description: A dictionary of variables accessible from within the rule.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/RuleTriggerRequest'


@aSDK.resource_class("section", "sections")
class SectionResource(aSDK):
# To instantiate: aSDK.resource("section")
# Number of methods: 5
#     addTaskForSection
#     deleteSection
#     getSection
#     getTasksForSection
#     updateSection

    @aSDK.resource_method("{gid}/addTask", http_method="POST", send={'data': '$'}, give="$.data")
    def addTaskForSection(self): pass
    # To call: aSDK.resource("section").addTaskForSection(...)
    # POST https://app.asana.com/api/1.0/sections/{gid}/addTask
    # Summary: Add task to section
    # Description:
    #   Add a task to a specific, existing section. This will remove the task from other sections of the project.
    #
    #   The task will be inserted at the top of a section unless an insert_before or insert_after parameter is declared.
    #
    #   This does not work for separators (tasks with the resource_subtype of section).
    #
    # Request Body:
    #   description: The task and optionally the insert location.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/SectionTaskInsertRequest'


    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteSection(self): pass
    # To call: aSDK.resource("section").deleteSection(...)
    # DELETE https://app.asana.com/api/1.0/sections/{gid}
    # Summary: Delete a section
    # Description:
    #   A specific, existing section can be deleted by making a DELETE request on
    #   the URL for that section.
    #
    #   Note that sections must be empty to be deleted.
    #
    #   The last remaining section cannot be deleted.
    #
    #   Returns an empty data block.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getSection(self): pass
    # To call: aSDK.resource("section").getSection(...)
    # GET https://app.asana.com/api/1.0/sections/{gid}
    # Summary: Get a section
    # Description:
    #   Returns the complete record for a single section.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/tasks", http_method="GET", send={'data': '$'}, give="$.data")
    def getTasksForSection(self): pass
    # To call: aSDK.resource("section").getTasksForSection(...)
    # GET https://app.asana.com/api/1.0/sections/{gid}/tasks
    # Summary: Get tasks from a section
    # Description:
    #   *Board view only*: Returns the compact section records for all tasks within the given section.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateSection(self): pass
    # To call: aSDK.resource("section").updateSection(...)
    # PUT https://app.asana.com/api/1.0/sections/{gid}
    # Summary: Update a section
    # Description:
    #   A specific, existing section can be updated by making a PUT request on
    #   the URL for that project. Only the fields provided in the `data` block
    #   will be updated; any unspecified fields will remain unchanged. (note that
    #   at this time, the only field that can be updated is the `name` field.)
    #
    #   When using this method, it is best to specify only those fields you wish
    #   to change, or else you may overwrite changes made by another user since
    #   you last retrieved the task.
    #
    #   Returns the complete updated section record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The section to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/SectionRequest'


@aSDK.resource_class("status_update", "status_updates")
class StatusUpdateResource(aSDK):
# To instantiate: aSDK.resource("status_update")
# Number of methods: 4
#     createStatusForObject
#     deleteStatus
#     getStatus
#     getStatusesForObject

    @aSDK.resource_method("", http_method="POST", send={'data': '$'}, give="$.data")
    def createStatusForObject(self): pass
    # To call: aSDK.resource("status_update").createStatusForObject(...)
    # POST https://app.asana.com/api/1.0/status_updates
    # Summary: Create a status update
    # Description:
    #   Creates a new status update on an object.
    #   Returns the full record of the newly created status update.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The status update to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/StatusUpdateRequest'


    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteStatus(self): pass
    # To call: aSDK.resource("status_update").deleteStatus(...)
    # DELETE https://app.asana.com/api/1.0/status_updates/{gid}
    # Summary: Delete a status update
    # Description:
    #   Deletes a specific, existing status update.
    #
    #   Returns an empty data record.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getStatus(self): pass
    # To call: aSDK.resource("status_update").getStatus(...)
    # GET https://app.asana.com/api/1.0/status_updates/{gid}
    # Summary: Get a status update
    # Description:
    #   Returns the complete record for a single status update.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getStatusesForObject(self): pass
    # To call: aSDK.resource("status_update").getStatusesForObject(...)
    # GET https://app.asana.com/api/1.0/status_updates
    # Summary: Get status updates from an object
    # Description:
    #   Returns the compact status update records for all updates on the object.
    #
    # Parameters:
    #   parent:
    #     required: true
    #     in: query
    #     description: Globally unique identifier for object to fetch statuses from. Must
    #       be a GID for a project, portfolio, or goal.
    #   created_since:
    #     required: false
    #     in: query
    #     description: Only return statuses that have been created since the given time.
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("story", "stories")
class StoryResource(aSDK):
# To instantiate: aSDK.resource("story")
# Number of methods: 3
#     deleteStory
#     getStory
#     updateStory

    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteStory(self): pass
    # To call: aSDK.resource("story").deleteStory(...)
    # DELETE https://app.asana.com/api/1.0/stories/{gid}
    # Summary: Delete a story
    # Description:
    #   Deletes a story. A user can only delete stories they have created.
    #
    #   Returns an empty data record.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getStory(self): pass
    # To call: aSDK.resource("story").getStory(...)
    # GET https://app.asana.com/api/1.0/stories/{gid}
    # Summary: Get a story
    # Description:
    #   Returns the full record for a single story.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateStory(self): pass
    # To call: aSDK.resource("story").updateStory(...)
    # PUT https://app.asana.com/api/1.0/stories/{gid}
    # Summary: Update a story
    # Description:
    #   Updates the story and returns the full record for the updated story. Only comment stories can have their text updated, and only comment stories and attachment stories can be pinned. Only one of `text` and `html_text` can be specified.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The comment story to update.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/StoryRequest'


@aSDK.resource_class("tag", "tags")
class TagResource(aSDK):
# To instantiate: aSDK.resource("tag")
# Number of methods: 6
#     createTag
#     deleteTag
#     getTag
#     getTags
#     getTasksForTag
#     updateTag

    @aSDK.resource_method("", http_method="POST", send={'data': '$'}, give="$.data")
    def createTag(self): pass
    # To call: aSDK.resource("tag").createTag(...)
    # POST https://app.asana.com/api/1.0/tags
    # Summary: Create a tag
    # Description:
    #   Creates a new tag in a workspace or organization.
    #
    #   Every tag is required to be created in a specific workspace or
    #   organization, and this cannot be changed once set. Note that you can use
    #   the workspace parameter regardless of whether or not it is an
    #   organization.
    #
    #   Returns the full record of the newly created tag.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The tag to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TagRequest'


    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteTag(self): pass
    # To call: aSDK.resource("tag").deleteTag(...)
    # DELETE https://app.asana.com/api/1.0/tags/{gid}
    # Summary: Delete a tag
    # Description:
    #   A specific, existing tag can be deleted by making a DELETE request on
    #   the URL for that tag.
    #
    #   Returns an empty data record.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getTag(self): pass
    # To call: aSDK.resource("tag").getTag(...)
    # GET https://app.asana.com/api/1.0/tags/{gid}
    # Summary: Get a tag
    # Description:
    #   Returns the complete tag record for a single tag.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getTags(self): pass
    # To call: aSDK.resource("tag").getTags(...)
    # GET https://app.asana.com/api/1.0/tags
    # Summary: Get multiple tags
    # Description:
    #   Returns the compact tag records for some filtered set of tags. Use one or more of the parameters provided to filter the tags returned.
    #
    # Parameters:
    #   workspace:
    #     required: false
    #     in: query
    #     description: The workspace to filter tags on.
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/tasks", http_method="GET", send={'data': '$'}, give="$.data")
    def getTasksForTag(self): pass
    # To call: aSDK.resource("tag").getTasksForTag(...)
    # GET https://app.asana.com/api/1.0/tags/{gid}/tasks
    # Summary: Get tasks from a tag
    # Description:
    #   Returns the compact task records for all tasks with the given tag. Tasks can have more than one tag at a time.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateTag(self): pass
    # To call: aSDK.resource("tag").updateTag(...)
    # PUT https://app.asana.com/api/1.0/tags/{gid}
    # Summary: Update a tag
    # Description:
    #   Updates the properties of a tag. Only the fields provided in the `data`
    #   block will be updated; any unspecified fields will remain unchanged.
    #
    #   When using this method, it is best to specify only those fields you wish
    #   to change, or else you may overwrite changes made by another user since
    #   you last retrieved the tag.
    #
    #   Returns the complete updated tag record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("task", "tasks")
class TaskResource(aSDK):
# To instantiate: aSDK.resource("task")
# Number of methods: 27
#     addDependenciesForTask
#     addDependentsForTask
#     addFollowersForTask
#     addProjectForTask
#     addTagForTask
#     createStoryForTask
#     createSubtaskForTask
#     createTask
#     createTimeTrackingEntry
#     deleteTask
#     duplicateTask
#     getDependenciesForTask
#     getDependentsForTask
#     getProjectsForTask
#     getStoriesForTask
#     getSubtasksForTask
#     getTagsForTask
#     getTask
#     getTasks
#     getTimeTrackingEntriesForTask
#     removeDependenciesForTask
#     removeDependentsForTask
#     removeFollowerForTask
#     removeProjectForTask
#     removeTagForTask
#     setParentForTask
#     updateTask

    @aSDK.resource_method("{gid}/addDependencies", http_method="POST", send={'data': '$'}, give="$.data")
    def addDependenciesForTask(self): pass
    # To call: aSDK.resource("task").addDependenciesForTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/addDependencies
    # Summary: Set dependencies for a task
    # Description:
    #   Marks a set of tasks as dependencies of this task, if they are not already dependencies. *A task can have at most 30 dependents and dependencies combined*.
    #
    # Request Body:
    #   description: The list of tasks to set as dependencies.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ModifyDependenciesRequest'


    @aSDK.resource_method("{gid}/addDependents", http_method="POST", send={'data': '$'}, give="$.data")
    def addDependentsForTask(self): pass
    # To call: aSDK.resource("task").addDependentsForTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/addDependents
    # Summary: Set dependents for a task
    # Description:
    #   Marks a set of tasks as dependents of this task, if they are not already dependents. *A task can have at most 30 dependents and dependencies combined*.
    #
    # Request Body:
    #   description: The list of tasks to add as dependents.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ModifyDependentsRequest'


    @aSDK.resource_method("{gid}/addFollowers", http_method="POST", send={'data': '$'}, give="$.data")
    def addFollowersForTask(self): pass
    # To call: aSDK.resource("task").addFollowersForTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/addFollowers
    # Summary: Add followers to a task
    # Description:
    #   Adds followers to a task. Returns an empty data block.
    #   Each task can be associated with zero or more followers in the system.
    #   Requests to add/remove followers, if successful, will return the complete updated task record, described above.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The followers to add to the task.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TaskAddFollowersRequest'


    @aSDK.resource_method("{gid}/addProject", http_method="POST", send={'data': '$'}, give="$.data")
    def addProjectForTask(self): pass
    # To call: aSDK.resource("task").addProjectForTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/addProject
    # Summary: Add a project to a task
    # Description:
    #   Adds the task to the specified project, in the optional location
    #   specified. If no location arguments are given, the task will be added to
    #   the end of the project.
    #
    #   `addProject` can also be used to reorder a task within a project or
    #   section that already contains it.
    #
    #   At most one of `insert_before`, `insert_after`, or `section` should be
    #   specified. Inserting into a section in an non-order-dependent way can be
    #   done by specifying section, otherwise, to insert within a section in a
    #   particular place, specify `insert_before` or `insert_after` and a task
    #   within the section to anchor the position of this task.
    #
    #   Returns an empty data block.
    #
    # Request Body:
    #   description: The project to add the task to.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TaskAddProjectRequest'


    @aSDK.resource_method("{gid}/addTag", http_method="POST", send={'data': '$'}, give="$.data")
    def addTagForTask(self): pass
    # To call: aSDK.resource("task").addTagForTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/addTag
    # Summary: Add a tag to a task
    # Description:
    #   Adds a tag to a task. Returns an empty data block.
    #
    # Request Body:
    #   description: The tag to add to the task.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TaskAddTagRequest'


    @aSDK.resource_method("{gid}/stories", http_method="POST", send={'data': '$'}, give="$.data")
    def createStoryForTask(self): pass
    # To call: aSDK.resource("task").createStoryForTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/stories
    # Summary: Create a story on a task
    # Description:
    #   Adds a story to a task. This endpoint currently only allows for comment
    #   stories to be created. The comment will be authored by the currently
    #   authenticated user, and timestamped when the server receives the request.
    #
    #   Returns the full record for the new story added to the task.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The story to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/StoryRequest'


    @aSDK.resource_method("{gid}/subtasks", http_method="POST", send={'data': '$'}, give="$.data")
    def createSubtaskForTask(self): pass
    # To call: aSDK.resource("task").createSubtaskForTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/subtasks
    # Summary: Create a subtask
    # Description:
    #   Creates a new subtask and adds it to the parent task. Returns the full record for the newly created subtask.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The new subtask to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TaskRequest'


    @aSDK.resource_method("", http_method="POST", send={'data': '$'}, give="$.data")
    def createTask(self): pass
    # To call: aSDK.resource("task").createTask(...)
    # POST https://app.asana.com/api/1.0/tasks
    # Summary: Create a task
    # Description:
    #   Creating a new task is as easy as POSTing to the `/tasks` endpoint with a
    #   data block containing the fields you’d like to set on the task. Any
    #   unspecified fields will take on default values.
    #
    #   Every task is required to be created in a specific workspace, and this
    #   workspace cannot be changed once set. The workspace need not be set
    #   explicitly if you specify `projects` or a `parent` task instead.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The task to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TaskRequest'


    @aSDK.resource_method("{gid}/time_tracking_entries", http_method="POST", send={'data': '$'}, give="$.data")
    def createTimeTrackingEntry(self): pass
    # To call: aSDK.resource("task").createTimeTrackingEntry(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/time_tracking_entries
    # Summary: Create a time tracking entry
    # Description:
    #   Creates a time tracking entry on a given task.
    #
    #   Returns the record of the newly created time tracking entry.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: Information about the time tracking entry.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/CreateTimeTrackingEntryRequest'


    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteTask(self): pass
    # To call: aSDK.resource("task").deleteTask(...)
    # DELETE https://app.asana.com/api/1.0/tasks/{gid}
    # Summary: Delete a task
    # Description:
    #   A specific, existing task can be deleted by making a DELETE request on
    #   the URL for that task. Deleted tasks go into the “trash” of the user
    #   making the delete request. Tasks can be recovered from the trash within a
    #   period of 30 days; afterward they are completely removed from the system.
    #
    #   Returns an empty data record.


    @aSDK.resource_method("{gid}/duplicate", http_method="POST", send={'data': '$'}, give="$.data")
    def duplicateTask(self): pass
    # To call: aSDK.resource("task").duplicateTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/duplicate
    # Summary: Duplicate a task
    # Description:
    #   Creates and returns a job that will asynchronously handle the duplication.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: Describes the duplicate's name and the fields that will be duplicated.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TaskDuplicateRequest'


    @aSDK.resource_method("{gid}/dependencies", http_method="GET", send={'data': '$'}, give="$.data")
    def getDependenciesForTask(self): pass
    # To call: aSDK.resource("task").getDependenciesForTask(...)
    # GET https://app.asana.com/api/1.0/tasks/{gid}/dependencies
    # Summary: Get dependencies from a task
    # Description:
    #   Returns the compact representations of all of the dependencies of a task.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/dependents", http_method="GET", send={'data': '$'}, give="$.data")
    def getDependentsForTask(self): pass
    # To call: aSDK.resource("task").getDependentsForTask(...)
    # GET https://app.asana.com/api/1.0/tasks/{gid}/dependents
    # Summary: Get dependents from a task
    # Description:
    #   Returns the compact representations of all of the dependents of a task.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/projects", http_method="GET", send={'data': '$'}, give="$.data")
    def getProjectsForTask(self): pass
    # To call: aSDK.resource("task").getProjectsForTask(...)
    # GET https://app.asana.com/api/1.0/tasks/{gid}/projects
    # Summary: Get projects a task is in
    # Description:
    #   Returns a compact representation of all of the projects the task is in.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/stories", http_method="GET", send={'data': '$'}, give="$.data")
    def getStoriesForTask(self): pass
    # To call: aSDK.resource("task").getStoriesForTask(...)
    # GET https://app.asana.com/api/1.0/tasks/{gid}/stories
    # Summary: Get stories from a task
    # Description:
    #   Returns the compact records for all stories on the task.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/subtasks", http_method="GET", send={'data': '$'}, give="$.data")
    def getSubtasksForTask(self): pass
    # To call: aSDK.resource("task").getSubtasksForTask(...)
    # GET https://app.asana.com/api/1.0/tasks/{gid}/subtasks
    # Summary: Get subtasks from a task
    # Description:
    #   Returns a compact representation of all of the subtasks of a task.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/tags", http_method="GET", send={'data': '$'}, give="$.data")
    def getTagsForTask(self): pass
    # To call: aSDK.resource("task").getTagsForTask(...)
    # GET https://app.asana.com/api/1.0/tasks/{gid}/tags
    # Summary: Get a task's tags
    # Description:
    #   Get a compact representation of all of the tags the task has.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getTask(self): pass
    # To call: aSDK.resource("task").getTask(...)
    # GET https://app.asana.com/api/1.0/tasks/{gid}
    # Summary: Get a task
    # Description:
    #   Returns the complete task record for a single task.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getTasks(self): pass
    # To call: aSDK.resource("task").getTasks(...)
    # GET https://app.asana.com/api/1.0/tasks
    # Summary: Get multiple tasks
    # Description:
    #   Returns the compact task records for some filtered set of tasks. Use one or more of the parameters provided to filter the tasks returned. You must specify a `project` or `tag` if you do not specify `assignee` and `workspace`.
    #
    #   For more complex task retrieval, use [workspaces/{workspace_gid}/tasks/search](/reference/searchtasksforworkspace).
    #
    # Parameters:
    #   assignee:
    #     required: false
    #     in: query
    #     description: 'The assignee to filter tasks on. If searching for unassigned tasks,
    #       assignee.any = null can be specified.
    #
    #       *Note: If you specify `assignee`, you must also specify the `workspace` to filter
    #       on.*'
    #   project:
    #     required: false
    #     in: query
    #     description: The project to filter tasks on.
    #   section:
    #     required: false
    #     in: query
    #     description: The section to filter tasks on.
    #   workspace:
    #     required: false
    #     in: query
    #     description: 'The workspace to filter tasks on.
    #
    #       *Note: If you specify `workspace`, you must also specify the `assignee` to filter
    #       on.*'
    #   completed_since:
    #     required: false
    #     in: query
    #     description: Only return tasks that are either incomplete or that have been completed
    #       since this time.
    #   modified_since:
    #     required: false
    #     in: query
    #     description: "Only return tasks that have been modified since the given time.\n\
    #       \n*Note: A task is considered \u201Cmodified\u201D if any of its properties\n\
    #       change, or associations between it and other objects are modified\n(e.g.  a\
    #       \ task being added to a project). A task is not considered\nmodified just because\
    #       \ another object it is associated with (e.g. a\nsubtask) is modified. Actions\
    #       \ that count as modifying the task\ninclude assigning, renaming, completing,\
    #       \ and adding stories.*"
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/time_tracking_entries", http_method="GET", send={'data': '$'}, give="$.data")
    def getTimeTrackingEntriesForTask(self): pass
    # To call: aSDK.resource("task").getTimeTrackingEntriesForTask(...)
    # GET https://app.asana.com/api/1.0/tasks/{gid}/time_tracking_entries
    # Summary: Get time tracking entries for a task
    # Description:
    #   Returns time tracking entries for a given task.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/removeDependencies", http_method="POST", send={'data': '$'}, give="$.data")
    def removeDependenciesForTask(self): pass
    # To call: aSDK.resource("task").removeDependenciesForTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/removeDependencies
    # Summary: Unlink dependencies from a task
    # Description:
    #   Unlinks a set of dependencies from this task.
    #
    # Request Body:
    #   description: The list of tasks to unlink as dependencies.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ModifyDependenciesRequest'


    @aSDK.resource_method("{gid}/removeDependents", http_method="POST", send={'data': '$'}, give="$.data")
    def removeDependentsForTask(self): pass
    # To call: aSDK.resource("task").removeDependentsForTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/removeDependents
    # Summary: Unlink dependents from a task
    # Description:
    #   Unlinks a set of dependents from this task.
    #
    # Request Body:
    #   description: The list of tasks to remove as dependents.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ModifyDependentsRequest'


    @aSDK.resource_method("{gid}/removeFollowers", http_method="POST", send={'data': '$'}, give="$.data")
    def removeFollowerForTask(self): pass
    # To call: aSDK.resource("task").removeFollowerForTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/removeFollowers
    # Summary: Remove followers from a task
    # Description:
    #   Removes each of the specified followers from the task if they are following. Returns the complete, updated record for the affected task.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The followers to remove from the task.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TaskRemoveFollowersRequest'


    @aSDK.resource_method("{gid}/removeProject", http_method="POST", send={'data': '$'}, give="$.data")
    def removeProjectForTask(self): pass
    # To call: aSDK.resource("task").removeProjectForTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/removeProject
    # Summary: Remove a project from a task
    # Description:
    #   Removes the task from the specified project. The task will still exist in
    #   the system, but it will not be in the project anymore.
    #
    #   Returns an empty data block.
    #
    # Request Body:
    #   description: The project to remove the task from.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TaskRemoveProjectRequest'


    @aSDK.resource_method("{gid}/removeTag", http_method="POST", send={'data': '$'}, give="$.data")
    def removeTagForTask(self): pass
    # To call: aSDK.resource("task").removeTagForTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/removeTag
    # Summary: Remove a tag from a task
    # Description:
    #   Removes a tag from a task. Returns an empty data block.
    #
    # Request Body:
    #   description: The tag to remove from the task.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TaskRemoveTagRequest'


    @aSDK.resource_method("{gid}/setParent", http_method="POST", send={'data': '$'}, give="$.data")
    def setParentForTask(self): pass
    # To call: aSDK.resource("task").setParentForTask(...)
    # POST https://app.asana.com/api/1.0/tasks/{gid}/setParent
    # Summary: Set the parent of a task
    # Description:
    #   parent, or no parent task at all. Returns an empty data block. When using `insert_before` and `insert_after`, at most one of those two options can be specified, and they must already be subtasks of the parent.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The new parent of the subtask.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TaskSetParentRequest'


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateTask(self): pass
    # To call: aSDK.resource("task").updateTask(...)
    # PUT https://app.asana.com/api/1.0/tasks/{gid}
    # Summary: Update a task
    # Description:
    #   A specific, existing task can be updated by making a PUT request on the
    #   URL for that task. Only the fields provided in the `data` block will be
    #   updated; any unspecified fields will remain unchanged.
    #
    #   When using this method, it is best to specify only those fields you wish
    #   to change, or else you may overwrite changes made by another user since
    #   you last retrieved the task.
    #
    #   Returns the complete updated task record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The task to update.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TaskRequest'


@aSDK.resource_class("team_membership", "team_memberships")
class TeamMembershipResource(aSDK):
# To instantiate: aSDK.resource("team_membership")
# Number of methods: 2
#     getTeamMembership
#     getTeamMemberships

    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getTeamMembership(self): pass
    # To call: aSDK.resource("team_membership").getTeamMembership(...)
    # GET https://app.asana.com/api/1.0/team_memberships/{gid}
    # Summary: Get a team membership
    # Description:
    #   Returns the complete team membership record for a single team membership.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getTeamMemberships(self): pass
    # To call: aSDK.resource("team_membership").getTeamMemberships(...)
    # GET https://app.asana.com/api/1.0/team_memberships
    # Summary: Get team memberships
    # Description:
    #   Returns compact team membership records.
    #
    # Parameters:
    #   team:
    #     required: false
    #     in: query
    #     description: Globally unique identifier for the team.
    #   user:
    #     required: false
    #     in: query
    #     description: A string identifying a user. This can either be the string "me",
    #       an email, or the gid of a user. This parameter must be used with the workspace
    #       parameter.
    #   workspace:
    #     required: false
    #     in: query
    #     description: Globally unique identifier for the workspace. This parameter must
    #       be used with the user parameter.
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("team", "teams")
class TeamResource(aSDK):
# To instantiate: aSDK.resource("team")
# Number of methods: 10
#     addUserForTeam
#     createProjectForTeam
#     createTeam
#     getProjectTemplatesForTeam
#     getProjectsForTeam
#     getTeam
#     getTeamMembershipsForTeam
#     getUsersForTeam
#     removeUserForTeam
#     updateTeam

    @aSDK.resource_method("{gid}/addUser", http_method="POST", send={'data': '$'}, give="$.data")
    def addUserForTeam(self): pass
    # To call: aSDK.resource("team").addUserForTeam(...)
    # POST https://app.asana.com/api/1.0/teams/{gid}/addUser
    # Summary: Add a user to a team
    # Description:
    #   The user making this call must be a member of the team in order to add others. The user being added must exist in the same organization as the team.
    #
    #   Returns the complete team membership record for the newly added user.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The user to add to the team.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TeamAddUserRequest'


    @aSDK.resource_method("{gid}/projects", http_method="POST", send={'data': '$'}, give="$.data")
    def createProjectForTeam(self): pass
    # To call: aSDK.resource("team").createProjectForTeam(...)
    # POST https://app.asana.com/api/1.0/teams/{gid}/projects
    # Summary: Create a project in a team
    # Description:
    #   Creates a project shared with the given team.
    #
    #   Returns the full record of the newly created project.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The new project to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ProjectRequest'


    @aSDK.resource_method("", http_method="POST", send={'data': '$'}, give="$.data")
    def createTeam(self): pass
    # To call: aSDK.resource("team").createTeam(...)
    # POST https://app.asana.com/api/1.0/teams
    # Summary: Create a team
    # Description:
    #   Creates a team within the current workspace.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The team to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TeamRequest'


    @aSDK.resource_method("{gid}/project_templates", http_method="GET", send={'data': '$'}, give="$.data")
    def getProjectTemplatesForTeam(self): pass
    # To call: aSDK.resource("team").getProjectTemplatesForTeam(...)
    # GET https://app.asana.com/api/1.0/teams/{gid}/project_templates
    # Summary: Get a team's project templates
    # Description:
    #   Returns the compact project template records for all project templates in the team.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/projects", http_method="GET", send={'data': '$'}, give="$.data")
    def getProjectsForTeam(self): pass
    # To call: aSDK.resource("team").getProjectsForTeam(...)
    # GET https://app.asana.com/api/1.0/teams/{gid}/projects
    # Summary: Get a team's projects
    # Description:
    #   Returns the compact project records for all projects in the team.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getTeam(self): pass
    # To call: aSDK.resource("team").getTeam(...)
    # GET https://app.asana.com/api/1.0/teams/{gid}
    # Summary: Get a team
    # Description:
    #   Returns the full record for a single team.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/team_memberships", http_method="GET", send={'data': '$'}, give="$.data")
    def getTeamMembershipsForTeam(self): pass
    # To call: aSDK.resource("team").getTeamMembershipsForTeam(...)
    # GET https://app.asana.com/api/1.0/teams/{gid}/team_memberships
    # Summary: Get memberships from a team
    # Description:
    #   Returns the compact team memberships for the team.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/users", http_method="GET", send={'data': '$'}, give="$.data")
    def getUsersForTeam(self): pass
    # To call: aSDK.resource("team").getUsersForTeam(...)
    # GET https://app.asana.com/api/1.0/teams/{gid}/users
    # Summary: Get users in a team
    # Description:
    #   Returns the compact records for all users that are members of the team.
    #   Results are sorted alphabetically and limited to 2000. For more results use the `/users` endpoint.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/removeUser", http_method="POST", send={'data': '$'}, give="$.data")
    def removeUserForTeam(self): pass
    # To call: aSDK.resource("team").removeUserForTeam(...)
    # POST https://app.asana.com/api/1.0/teams/{gid}/removeUser
    # Summary: Remove a user from a team
    # Description:
    #   The user making this call must be a member of the team in order to remove themselves or others.
    #
    # Request Body:
    #   description: The user to remove from the team.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TeamRemoveUserRequest'


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateTeam(self): pass
    # To call: aSDK.resource("team").updateTeam(...)
    # PUT https://app.asana.com/api/1.0/teams/{gid}
    # Summary: Update a team
    # Description:
    #   Updates a team within the current workspace.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The team to update.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TeamRequest'


@aSDK.resource_class("time_period", "time_periods")
class TimePeriodResource(aSDK):
# To instantiate: aSDK.resource("time_period")
# Number of methods: 2
#     getTimePeriod
#     getTimePeriods

    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getTimePeriod(self): pass
    # To call: aSDK.resource("time_period").getTimePeriod(...)
    # GET https://app.asana.com/api/1.0/time_periods/{gid}
    # Summary: Get a time period
    # Description:
    #   Returns the full record for a single time period.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getTimePeriods(self): pass
    # To call: aSDK.resource("time_period").getTimePeriods(...)
    # GET https://app.asana.com/api/1.0/time_periods
    # Summary: Get time periods
    # Description:
    #   Returns compact time period records.
    #
    # Parameters:
    #   start_on:
    #     required: false
    #     in: query
    #     description: ISO 8601 date string
    #   end_on:
    #     required: false
    #     in: query
    #     description: ISO 8601 date string
    #   workspace:
    #     required: true
    #     in: query
    #     description: Globally unique identifier for the workspace.
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("time_tracking_entry", "time_tracking_entries")
class TimeTrackingEntryResource(aSDK):
# To instantiate: aSDK.resource("time_tracking_entry")
# Number of methods: 3
#     deleteTimeTrackingEntry
#     getTimeTrackingEntry
#     updateTimeTrackingEntry

    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteTimeTrackingEntry(self): pass
    # To call: aSDK.resource("time_tracking_entry").deleteTimeTrackingEntry(...)
    # DELETE https://app.asana.com/api/1.0/time_tracking_entries/{gid}
    # Summary: Delete a time tracking entry
    # Description:
    #   A specific, existing time tracking entry can be deleted by making a `DELETE` request on
    #   the URL for that time tracking entry.
    #
    #   Returns an empty data record.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getTimeTrackingEntry(self): pass
    # To call: aSDK.resource("time_tracking_entry").getTimeTrackingEntry(...)
    # GET https://app.asana.com/api/1.0/time_tracking_entries/{gid}
    # Summary: Get a time tracking entry
    # Description:
    #   Returns the complete time tracking entry record for a single time tracking entry.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateTimeTrackingEntry(self): pass
    # To call: aSDK.resource("time_tracking_entry").updateTimeTrackingEntry(...)
    # PUT https://app.asana.com/api/1.0/time_tracking_entries/{gid}
    # Summary: Update a time tracking entry
    # Description:
    #   A specific, existing time tracking entry can be updated by making a `PUT` request on
    #   the URL for that time tracking entry. Only the fields provided in the `data` block
    #   will be updated; any unspecified fields will remain unchanged.
    #
    #   When using this method, it is best to specify only those fields you wish
    #   to change, or else you may overwrite changes made by another user since
    #   you last retrieved the task.
    #
    #   Returns the complete updated time tracking entry record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The updated fields for the time tracking entry.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/UpdateTimeTrackingEntryRequest'


@aSDK.resource_class("user", "users")
class UserResource(aSDK):
# To instantiate: aSDK.resource("user")
# Number of methods: 7
#     getFavoritesForUser
#     getTeamMembershipsForUser
#     getTeamsForUser
#     getUser
#     getUserTaskListForUser
#     getUsers
#     getWorkspaceMembershipsForUser

    @aSDK.resource_method("{gid}/favorites", http_method="GET", send={'data': '$'}, give="$.data")
    def getFavoritesForUser(self): pass
    # To call: aSDK.resource("user").getFavoritesForUser(...)
    # GET https://app.asana.com/api/1.0/users/{gid}/favorites
    # Summary: Get a user's favorites
    # Description:
    #   Returns all of a user's favorites in the given workspace, of the given type.
    #   Results are given in order (The same order as Asana's sidebar).
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/team_memberships", http_method="GET", send={'data': '$'}, give="$.data")
    def getTeamMembershipsForUser(self): pass
    # To call: aSDK.resource("user").getTeamMembershipsForUser(...)
    # GET https://app.asana.com/api/1.0/users/{gid}/team_memberships
    # Summary: Get memberships from a user
    # Description:
    #   Returns the compact team membership records for the user.
    #
    # Parameters:
    #   workspace:
    #     required: true
    #     in: query
    #     description: Globally unique identifier for the workspace.
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/teams", http_method="GET", send={'data': '$'}, give="$.data")
    def getTeamsForUser(self): pass
    # To call: aSDK.resource("user").getTeamsForUser(...)
    # GET https://app.asana.com/api/1.0/users/{gid}/teams
    # Summary: Get teams for a user
    # Description:
    #   Returns the compact records for all teams to which the given user is assigned.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getUser(self): pass
    # To call: aSDK.resource("user").getUser(...)
    # GET https://app.asana.com/api/1.0/users/{gid}
    # Summary: Get a user
    # Description:
    #   Returns the full user record for the single user with the provided ID.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/user_task_list", http_method="GET", send={'data': '$'}, give="$.data")
    def getUserTaskListForUser(self): pass
    # To call: aSDK.resource("user").getUserTaskListForUser(...)
    # GET https://app.asana.com/api/1.0/users/{gid}/user_task_list
    # Summary: Get a user's task list
    # Description:
    #   Returns the full record for a user's task list.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getUsers(self): pass
    # To call: aSDK.resource("user").getUsers(...)
    # GET https://app.asana.com/api/1.0/users
    # Summary: Get multiple users
    # Description:
    #   Returns the user records for all users in all workspaces and organizations accessible to the authenticated user. Accepts an optional workspace ID parameter.
    #   Results are sorted by user ID.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/workspace_memberships", http_method="GET", send={'data': '$'}, give="$.data")
    def getWorkspaceMembershipsForUser(self): pass
    # To call: aSDK.resource("user").getWorkspaceMembershipsForUser(...)
    # GET https://app.asana.com/api/1.0/users/{gid}/workspace_memberships
    # Summary: Get workspace memberships for a user
    # Description:
    #   Returns the compact workspace membership records for the user.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("user_task_list", "user_task_lists")
class UserTaskListResource(aSDK):
# To instantiate: aSDK.resource("user_task_list")
# Number of methods: 2
#     getTasksForUserTaskList
#     getUserTaskList

    @aSDK.resource_method("{gid}/tasks", http_method="GET", send={'data': '$'}, give="$.data")
    def getTasksForUserTaskList(self): pass
    # To call: aSDK.resource("user_task_list").getTasksForUserTaskList(...)
    # GET https://app.asana.com/api/1.0/user_task_lists/{gid}/tasks
    # Summary: Get tasks from a user task list
    # Description:
    #   Returns the compact list of tasks in a user’s My Tasks list.
    #   *Note: Access control is enforced for this endpoint as with all Asana API endpoints, meaning a user’s private tasks will be filtered out if the API-authenticated user does not have access to them.*
    #   *Note: Both complete and incomplete tasks are returned by default unless they are filtered out (for example, setting `completed_since=now` will return only incomplete tasks, which is the default view for “My Tasks” in Asana.)*
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getUserTaskList(self): pass
    # To call: aSDK.resource("user_task_list").getUserTaskList(...)
    # GET https://app.asana.com/api/1.0/user_task_lists/{gid}
    # Summary: Get a user task list
    # Description:
    #   Returns the full record for a user task list.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("webhook", "webhooks")
class WebhookResource(aSDK):
# To instantiate: aSDK.resource("webhook")
# Number of methods: 5
#     createWebhook
#     deleteWebhook
#     getWebhook
#     getWebhooks
#     updateWebhook

    @aSDK.resource_method("", http_method="POST", send={'data': '$'}, give="$.data")
    def createWebhook(self): pass
    # To call: aSDK.resource("webhook").createWebhook(...)
    # POST https://app.asana.com/api/1.0/webhooks
    # Summary: Establish a webhook
    # Description:
    #   Establishing a webhook is a two-part process. First, a simple HTTP POST
    #   request initiates the creation similar to creating any other resource.
    #
    #   Next, in the middle of this request comes the confirmation handshake.
    #   When a webhook is created, we will send a test POST to the target with an
    #   `X-Hook-Secret` header. The target must respond with a `200 OK` or `204
    #   No Content` and a matching `X-Hook-Secret` header to confirm that this
    #   webhook subscription is indeed expected. We strongly recommend storing
    #   this secret to be used to verify future webhook event signatures.
    #
    #   The POST request to create the webhook will then return with the status
    #   of the request. If you do not acknowledge the webhook’s confirmation
    #   handshake it will fail to setup, and you will receive an error in
    #   response to your attempt to create it. This means you need to be able to
    #   receive and complete the webhook *while* the POST request is in-flight
    #   (in other words, have a server that can handle requests asynchronously).
    #
    #   Invalid hostnames like localhost will recieve a 403 Forbidden status code.
    #
    #   ```
    #   # Request
    #   curl -H "Authorization: Bearer <personal_access_token>" \
    #   -X POST https://app.asana.com/api/1.0/webhooks \
    #   -d "resource=8675309" \
    #   -d "target=https://example.com/receive-webhook/7654"
    #   ```
    #
    #   ```
    #   # Handshake sent to https://example.com/
    #   POST /receive-webhook/7654
    #   X-Hook-Secret: b537207f20cbfa02357cf448134da559e8bd39d61597dcd5631b8012eae53e81
    #   ```
    #
    #   ```
    #   # Handshake response sent by example.com
    #   HTTP/1.1 200
    #   X-Hook-Secret: b537207f20cbfa02357cf448134da559e8bd39d61597dcd5631b8012eae53e81
    #   ```
    #
    #   ```
    #   # Response
    #   HTTP/1.1 201
    #   {
    #     "data": {
    #       "gid": "43214",
    #       "resource": {
    #         "gid": "8675309",
    #         "name": "Bugs"
    #       },
    #       "target": "https://example.com/receive-webhook/7654",
    #       "active": false,
    #       "last_success_at": null,
    #       "last_failure_at": null,
    #       "last_failure_content": null
    #     }
    #   }
    #   ```
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The webhook workspace and target.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/WebhookRequest'


    @aSDK.resource_method("{gid}", http_method="DELETE", send={'data': '$'}, give="$.data")
    def deleteWebhook(self): pass
    # To call: aSDK.resource("webhook").deleteWebhook(...)
    # DELETE https://app.asana.com/api/1.0/webhooks/{gid}
    # Summary: Delete a webhook
    # Description:
    #   This method *permanently* removes a webhook. Note that it may be possible to receive a request that was already in flight after deleting the webhook, but no further requests will be issued.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getWebhook(self): pass
    # To call: aSDK.resource("webhook").getWebhook(...)
    # GET https://app.asana.com/api/1.0/webhooks/{gid}
    # Summary: Get a webhook
    # Description:
    #   Returns the full record for the given webhook.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getWebhooks(self): pass
    # To call: aSDK.resource("webhook").getWebhooks(...)
    # GET https://app.asana.com/api/1.0/webhooks
    # Summary: Get multiple webhooks
    # Description:
    #   Get the compact representation of all webhooks your app has registered for the authenticated user in the given workspace.
    #
    # Parameters:
    #   workspace:
    #     required: true
    #     in: query
    #     description: The workspace to query for webhooks in.
    #   resource:
    #     required: false
    #     in: query
    #     description: Only return webhooks for the given resource.
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateWebhook(self): pass
    # To call: aSDK.resource("webhook").updateWebhook(...)
    # PUT https://app.asana.com/api/1.0/webhooks/{gid}
    # Summary: Update a webhook
    # Description:
    #   An existing webhook's filters can be updated by making a PUT request on the URL for that webhook. Note that the webhook's previous `filters` array will be completely overwritten by the `filters` sent in the PUT request.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The updated filters for the webhook.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/WebhookUpdateRequest'


@aSDK.resource_class("workspace_membership", "workspace_memberships")
class WorkspaceMembershipResource(aSDK):
# To instantiate: aSDK.resource("workspace_membership")
# Number of methods: 1
#     getWorkspaceMembership

    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getWorkspaceMembership(self): pass
    # To call: aSDK.resource("workspace_membership").getWorkspaceMembership(...)
    # GET https://app.asana.com/api/1.0/workspace_memberships/{gid}
    # Summary: Get a workspace membership
    # Description:
    #   Returns the complete workspace record for a single workspace membership.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


@aSDK.resource_class("workspace", "workspaces")
class WorkspaceResource(aSDK):
# To instantiate: aSDK.resource("workspace")
# Number of methods: 16
#     addUserForWorkspace
#     createProjectForWorkspace
#     createTagForWorkspace
#     getAuditLogEvents
#     getCustomFieldsForWorkspace
#     getProjectsForWorkspace
#     getTagsForWorkspace
#     getTeamsForWorkspace
#     getUsersForWorkspace
#     getWorkspace
#     getWorkspaceMembershipsForWorkspace
#     getWorkspaces
#     removeUserForWorkspace
#     searchTasksForWorkspace
#     typeaheadForWorkspace
#     updateWorkspace

    @aSDK.resource_method("{gid}/addUser", http_method="POST", send={'data': '$'}, give="$.data")
    def addUserForWorkspace(self): pass
    # To call: aSDK.resource("workspace").addUserForWorkspace(...)
    # POST https://app.asana.com/api/1.0/workspaces/{gid}/addUser
    # Summary: Add a user to a workspace or organization
    # Description:
    #   Add a user to a workspace or organization.
    #   The user can be referenced by their globally unique user ID or their email address. Returns the full user record for the invited user.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The user to add to the workspace.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/WorkspaceAddUserRequest'


    @aSDK.resource_method("{gid}/projects", http_method="POST", send={'data': '$'}, give="$.data")
    def createProjectForWorkspace(self): pass
    # To call: aSDK.resource("workspace").createProjectForWorkspace(...)
    # POST https://app.asana.com/api/1.0/workspaces/{gid}/projects
    # Summary: Create a project in a workspace
    # Description:
    #   Creates a project in the workspace.
    #
    #   If the workspace for your project is an organization, you must also
    #   supply a team to share the project with.
    #
    #   Returns the full record of the newly created project.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The new project to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/ProjectRequest'


    @aSDK.resource_method("{gid}/tags", http_method="POST", send={'data': '$'}, give="$.data")
    def createTagForWorkspace(self): pass
    # To call: aSDK.resource("workspace").createTagForWorkspace(...)
    # POST https://app.asana.com/api/1.0/workspaces/{gid}/tags
    # Summary: Create a tag in a workspace
    # Description:
    #   Creates a new tag in a workspace or organization.
    #
    #   Every tag is required to be created in a specific workspace or
    #   organization, and this cannot be changed once set. Note that you can use
    #   the workspace parameter regardless of whether or not it is an
    #   organization.
    #
    #   Returns the full record of the newly created tag.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The tag to create.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/TagResponse'


    @aSDK.resource_method("{gid}/audit_log_events", http_method="GET", send={'data': '$'}, give="$.data")
    def getAuditLogEvents(self): pass
    # To call: aSDK.resource("workspace").getAuditLogEvents(...)
    # GET https://app.asana.com/api/1.0/workspaces/{gid}/audit_log_events
    # Summary: Get audit log events
    # Description:
    #   Retrieve the audit log events that have been captured in your domain.
    #
    #   This endpoint will return a list of [AuditLogEvent](/reference/audit-log-api) objects, sorted by creation time in ascending order. Note that the Audit Log API captures events from October 8th, 2021 and later. Queries for events before this date will not return results.
    #
    #   There are a number of query parameters (below) that can be used to filter the set of [AuditLogEvent](/reference/audit-log-api) objects that are returned in the response. Any combination of query parameters is valid. When no filters are provided, all of the events that have been captured in your domain will match.
    #
    #   The list of events will always be [paginated](/docs/pagination). The default limit is 1000 events. The next set of events can be retrieved using the `offset` from the previous response. If there are no events that match the provided filters in your domain, the endpoint will return `null` for the `next_page` field. Querying again with the same filters may return new events if they were captured after the last request. Once a response includes a `next_page` with an `offset`, subsequent requests can be made with the latest `offset` to poll for new events that match the provided filters.
    #
    #   *Note: If the filters you provided match events in your domain and `next_page` is present in the response, we will continue to send `next_page` on subsequent requests even when there are no more events that match the filters. This was put in place so that you can implement an audit log stream that will return future events that match these filters. If you are not interested in future events that match the filters you have defined, you can rely on checking empty `data` response for the end of current events that match your filters.*
    #
    #   When no `offset` is provided, the response will begin with the oldest events that match the provided filters. It is important to note that [AuditLogEvent](/reference/audit-log-api) objects will be permanently deleted from our systems after 90 days. If you wish to keep a permanent record of these events, we recommend using a SIEM tool to ingest and store these logs.


    @aSDK.resource_method("{gid}/custom_fields", http_method="GET", send={'data': '$'}, give="$.data")
    def getCustomFieldsForWorkspace(self): pass
    # To call: aSDK.resource("workspace").getCustomFieldsForWorkspace(...)
    # GET https://app.asana.com/api/1.0/workspaces/{gid}/custom_fields
    # Summary: Get a workspace's custom fields
    # Description:
    #   Returns a list of the compact representation of all of the custom fields in a workspace.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/projects", http_method="GET", send={'data': '$'}, give="$.data")
    def getProjectsForWorkspace(self): pass
    # To call: aSDK.resource("workspace").getProjectsForWorkspace(...)
    # GET https://app.asana.com/api/1.0/workspaces/{gid}/projects
    # Summary: Get all projects in a workspace
    # Description:
    #   Returns the compact project records for all projects in the workspace.
    #   *Note: This endpoint may timeout for large domains. Prefer the `/teams/{team_gid}/projects` endpoint.*
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/tags", http_method="GET", send={'data': '$'}, give="$.data")
    def getTagsForWorkspace(self): pass
    # To call: aSDK.resource("workspace").getTagsForWorkspace(...)
    # GET https://app.asana.com/api/1.0/workspaces/{gid}/tags
    # Summary: Get tags in a workspace
    # Description:
    #   Returns the compact tag records for some filtered set of tags. Use one or more of the parameters provided to filter the tags returned.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/teams", http_method="GET", send={'data': '$'}, give="$.data")
    def getTeamsForWorkspace(self): pass
    # To call: aSDK.resource("workspace").getTeamsForWorkspace(...)
    # GET https://app.asana.com/api/1.0/workspaces/{gid}/teams
    # Summary: Get teams in a workspace
    # Description:
    #   Returns the compact records for all teams in the workspace visible to the authorized user.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/users", http_method="GET", send={'data': '$'}, give="$.data")
    def getUsersForWorkspace(self): pass
    # To call: aSDK.resource("workspace").getUsersForWorkspace(...)
    # GET https://app.asana.com/api/1.0/workspaces/{gid}/users
    # Summary: Get users in a workspace or organization
    # Description:
    #   Returns the compact records for all users in the specified workspace or organization.
    #   Results are sorted alphabetically and limited to 2000. For more results use the `/users` endpoint.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="GET", send={'data': '$'}, give="$.data")
    def getWorkspace(self): pass
    # To call: aSDK.resource("workspace").getWorkspace(...)
    # GET https://app.asana.com/api/1.0/workspaces/{gid}
    # Summary: Get a workspace
    # Description:
    #   Returns the full workspace record for a single workspace.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/workspace_memberships", http_method="GET", send={'data': '$'}, give="$.data")
    def getWorkspaceMembershipsForWorkspace(self): pass
    # To call: aSDK.resource("workspace").getWorkspaceMembershipsForWorkspace(...)
    # GET https://app.asana.com/api/1.0/workspaces/{gid}/workspace_memberships
    # Summary: Get the workspace memberships for a workspace
    # Description:
    #   Returns the compact workspace membership records for the workspace.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("", http_method="GET", send={'data': '$'}, give="$.data")
    def getWorkspaces(self): pass
    # To call: aSDK.resource("workspace").getWorkspaces(...)
    # GET https://app.asana.com/api/1.0/workspaces
    # Summary: Get multiple workspaces
    # Description:
    #   Returns the compact records for all workspaces visible to the authorized user.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/removeUser", http_method="POST", send={'data': '$'}, give="$.data")
    def removeUserForWorkspace(self): pass
    # To call: aSDK.resource("workspace").removeUserForWorkspace(...)
    # POST https://app.asana.com/api/1.0/workspaces/{gid}/removeUser
    # Summary: Remove a user from a workspace or organization
    # Description:
    #   Remove a user from a workspace or organization.
    #   The user making this call must be an admin in the workspace. The user can be referenced by their globally unique user ID or their email address.
    #   Returns an empty data record.
    #
    # Request Body:
    #   description: The user to remove from the workspace.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/WorkspaceRemoveUserRequest'


    @aSDK.resource_method("{gid}/tasks/search", http_method="GET", send={'data': '$'}, give="$.data")
    def searchTasksForWorkspace(self): pass
    # To call: aSDK.resource("workspace").searchTasksForWorkspace(...)
    # GET https://app.asana.com/api/1.0/workspaces/{gid}/tasks/search
    # Summary: Search tasks in a workspace
    # Description:
    #   To mirror the functionality of the Asana web app's advanced search feature, the Asana API has a task search endpoint that allows you to build complex filters to find and retrieve the exact data you need.
    #   #### Premium access
    #   Like the Asana web product's advance search feature, this search endpoint will only be available to premium Asana users. A user is premium if any of the following is true:
    #
    #   - The workspace in which the search is being performed is a premium workspace - The user is a member of a premium team inside the workspace
    #
    #   Even if a user is only a member of a premium team inside a non-premium workspace, search will allow them to find data anywhere in the workspace, not just inside the premium team. Making a search request using credentials of a non-premium user will result in a `402 Payment Required` error.
    #   #### Pagination
    #   Search results are not stable; repeating the same query multiple times may return the data in a different order, even if the data do not change. Because of this, the traditional [pagination](https://developers.asana.com/docs/#pagination) available elsewhere in the Asana API is not available here. However, you can paginate manually by sorting the search results by their creation time and then modifying each subsequent query to exclude data you have already seen. Page sizes are limited to a maximum of 100 items, and can be specified by the `limit` query parameter.
    #   #### Eventual consistency
    #   Changes in Asana (regardless of whether they’re made though the web product or the API) are forwarded to our search infrastructure to be indexed. This process can take between 10 and 60 seconds to complete under normal operation, and longer during some production incidents. Making a change to a task that would alter its presence in a particular search query will not be reflected immediately. This is also true of the advanced search feature in the web product.
    #   #### Rate limits
    #   You may receive a `429 Too Many Requests` response if you hit any of our [rate limits](https://developers.asana.com/docs/#rate-limits).
    #   #### Custom field parameters
    #   | Parameter name | Custom field type | Accepted type |
    #   |---|---|---|
    #   | custom_fields.{gid}.is_set | All | Boolean |
    #   | custom_fields.{gid}.value | Text | String |
    #   | custom_fields.{gid}.value | Number | Number |
    #   | custom_fields.{gid}.value | Enum | Enum option ID |
    #   | custom_fields.{gid}.starts_with | Text only | String |
    #   | custom_fields.{gid}.ends_with | Text only | String |
    #   | custom_fields.{gid}.contains | Text only | String |
    #   | custom_fields.{gid}.less_than | Number only | Number |
    #   | custom_fields.{gid}.greater_than | Number only | Number |
    #
    #
    #   For example, if the gid of the custom field is 12345, these query parameter to find tasks where it is set would be `custom_fields.12345.is_set=true`. To match an exact value for an enum custom field, use the gid of the desired enum option and not the name of the enum option: `custom_fields.12345.value=67890`.
    #
    #   **Not Supported**: searching for multiple exact matches of a custom field, searching for multi-enum custom field
    #
    #   *Note: If you specify `projects.any` and `sections.any`, you will receive tasks for the project **and** tasks for the section. If you're looking for only tasks in a section, omit the `projects.any` from the request.*
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}/typeahead", http_method="GET", send={'data': '$'}, give="$.data")
    def typeaheadForWorkspace(self): pass
    # To call: aSDK.resource("workspace").typeaheadForWorkspace(...)
    # GET https://app.asana.com/api/1.0/workspaces/{gid}/typeahead
    # Summary: Get objects via typeahead
    # Description:
    #   Retrieves objects in the workspace based via an auto-completion/typeahead
    #   search algorithm. This feature is meant to provide results quickly, so do
    #   not rely on this API to provide extremely accurate search results. The
    #   result set is limited to a single page of results with a maximum size, so
    #   you won’t be able to fetch large numbers of results.
    #
    #   The typeahead search API provides search for objects from a single
    #   workspace. This endpoint should be used to query for objects when
    #   creating an auto-completion/typeahead search feature. This API is meant
    #   to provide results quickly and should not be relied upon for accurate or
    #   exhaustive search results. The results sets are limited in size and
    #   cannot be paginated.
    #
    #   Queries return a compact representation of each object which is typically
    #   the gid and name fields. Interested in a specific set of fields or all of
    #   the fields?! Of course you are. Use field selectors to manipulate what
    #   data is included in a response.
    #
    #   Resources with type `user` are returned in order of most contacted to
    #   least contacted. This is determined by task assignments, adding the user
    #   to projects, and adding the user as a follower to tasks, messages,
    #   etc.
    #
    #   Resources with type `project` are returned in order of recency. This is
    #   determined when the user visits the project, is added to the project, and
    #   completes tasks in the project.
    #
    #   Resources with type `task` are returned with priority placed on tasks
    #   the user is following, but no guarantee on the order of those tasks.
    #
    #   Resources with type `project_template` are returned with priority
    #   placed on favorited project templates.
    #
    #   Leaving the `query` string empty or omitted will give you results, still
    #   following the resource ordering above. This could be used to list users or
    #   projects that are relevant for the requesting user's api token.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.


    @aSDK.resource_method("{gid}", http_method="PUT", send={'data': '$'}, give="$.data")
    def updateWorkspace(self): pass
    # To call: aSDK.resource("workspace").updateWorkspace(...)
    # PUT https://app.asana.com/api/1.0/workspaces/{gid}
    # Summary: Update a workspace
    # Description:
    #   A specific, existing workspace can be updated by making a PUT request on the URL for that workspace. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged.
    #   Currently the only field that can be modified for a workspace is its name.
    #   Returns the complete, updated workspace record.
    #
    # Parameters:
    #   opt_fields:
    #     required: false
    #     in: query
    #     description: This endpoint returns a compact resource, which excludes some properties
    #       by default. To include those optional properties, set this query parameter to
    #       a comma-separated list of the properties you wish to include.
    #
    # Request Body:
    #   description: The workspace object with all updated properties.
    #   content:
    #     application/json:
    #       schema:
    #         type: object
    #         properties:
    #           data:
    #             $ref: '#/components/schemas/WorkspaceRequest'

